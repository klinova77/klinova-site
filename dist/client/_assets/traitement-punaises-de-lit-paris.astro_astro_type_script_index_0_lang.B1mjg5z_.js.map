{"version":3,"file":"traitement-punaises-de-lit-paris.astro_astro_type_script_index_0_lang.B1mjg5z_.js","sources":["../../../src/pages/traitement-punaises-de-lit-paris.astro?astro&type=script&index=0&lang.ts"],"sourcesContent":["  (function () {\r\n    const root = document.getElementById('faq-express');\r\n    if (!root) return;\r\n\r\n    const items = Array.from(root.querySelectorAll('details'));\r\n    const closeOthers = (current) => {\r\n      items.forEach(d => { if (d !== current) d.removeAttribute('open'); });\r\n    };\r\n\r\n    const setPanelHeight = (d) => {\r\n      const panel = d.querySelector('[data-panel]');\r\n      if (!panel) return;\r\n      if (d.open) {\r\n        // Mesure + set pour anim hauteur\r\n        panel.style.maxHeight = panel.scrollHeight + 'px';\r\n        panel.style.opacity = '1';\r\n      } else {\r\n        panel.style.maxHeight = '0px';\r\n        panel.style.opacity = '0.98';\r\n      }\r\n    };\r\n\r\n    // Init (hauteur correcte si un item est pré-ouvert)\r\n    items.forEach(d => setPanelHeight(d));\r\n\r\n    // Toggle + fermeture auto des autres\r\n    items.forEach(d => {\r\n      d.addEventListener('toggle', () => {\r\n        if (d.open) closeOthers(d);\r\n        setPanelHeight(d);\r\n        // Ancre propre\r\n        history.replaceState(null, '', '#' + d.id);\r\n      }, { passive: true });\r\n      // Améliore la surface cliquable via clavier\r\n      const summary = d.querySelector('summary');\r\n      summary && summary.setAttribute('aria-controls', d.id);\r\n    });\r\n\r\n    // Deep-link : ouvrir l’item ciblé par l’ancre\r\n    const openByHash = () => {\r\n      const id = (location.hash || '').replace('#', '');\r\n      if (!id) return;\r\n      const target = root.querySelector('details#' + CSS.escape(id));\r\n      if (target) {\r\n        target.setAttribute('open', '');\r\n        closeOthers(target);\r\n        setPanelHeight(target);\r\n        // Scroll doux vers l’item\r\n        target.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n      }\r\n    };\r\n    openByHash();\r\n    window.addEventListener('hashchange', openByHash, { passive: true });\r\n\r\n    // Recalcule la hauteur si la fenêtre change (éviter cut-off)\r\n    let resizeTimer;\r\n    window.addEventListener('resize', () => {\r\n      clearTimeout(resizeTimer);\r\n      resizeTimer = setTimeout(() => {\r\n        items.forEach(d => { if (d.open) setPanelHeight(d); });\r\n      }, 120);\r\n    }, { passive: true });\r\n  })();\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"],"names":["root","items","closeOthers","current","d","setPanelHeight","panel","summary","openByHash","id","target","resizeTimer"],"mappings":"CAqqBG,UAAY,CACX,MAAMA,EAAO,SAAS,eAAe,aAAa,EAClD,GAAI,CAACA,EAAM,OAEX,MAAMC,EAAQ,MAAM,KAAKD,EAAK,iBAAiB,SAAS,CAAC,EACnDE,EAAeC,GAAY,CAC/BF,EAAM,QAAQG,GAAK,CAAMA,IAAMD,GAASC,EAAE,gBAAgB,MAAM,CAAG,CAAC,CACtE,EAEMC,EAAkBD,GAAM,CAC5B,MAAME,EAAQF,EAAE,cAAc,cAAc,EACvCE,IACDF,EAAE,MAEJE,EAAM,MAAM,UAAYA,EAAM,aAAe,KAC7CA,EAAM,MAAM,QAAU,MAEtBA,EAAM,MAAM,UAAY,MACxBA,EAAM,MAAM,QAAU,QAE1B,EAGAL,EAAM,QAAQG,GAAKC,EAAeD,CAAC,CAAC,EAGpCH,EAAM,QAAQG,GAAK,CACjBA,EAAE,iBAAiB,SAAU,IAAM,CAC7BA,EAAE,MAAMF,EAAYE,CAAC,EACzBC,EAAeD,CAAC,EAEhB,QAAQ,aAAa,KAAM,GAAI,IAAMA,EAAE,EAAE,CAC3C,EAAG,CAAE,QAAS,GAAM,EAEpB,MAAMG,EAAUH,EAAE,cAAc,SAAS,EACzCG,GAAWA,EAAQ,aAAa,gBAAiBH,EAAE,EAAE,CACvD,CAAC,EAGD,MAAMI,EAAa,IAAM,CACvB,MAAMC,GAAM,SAAS,MAAQ,IAAI,QAAQ,IAAK,EAAE,EAChD,GAAI,CAACA,EAAI,OACT,MAAMC,EAASV,EAAK,cAAc,WAAa,IAAI,OAAOS,CAAE,CAAC,EACzDC,IACFA,EAAO,aAAa,OAAQ,EAAE,EAC9BR,EAAYQ,CAAM,EAClBL,EAAeK,CAAM,EAErBA,EAAO,eAAe,CAAE,SAAU,SAAU,MAAO,QAAS,EAEhE,EACAF,EAAA,EACA,OAAO,iBAAiB,aAAcA,EAAY,CAAE,QAAS,GAAM,EAGnE,IAAIG,EACJ,OAAO,iBAAiB,SAAU,IAAM,CACtC,aAAaA,CAAW,EACxBA,EAAc,WAAW,IAAM,CAC7BV,EAAM,QAAQG,GAAK,CAAMA,EAAE,MAAMC,EAAeD,CAAC,CAAG,CAAC,CACvD,EAAG,GAAG,CACR,EAAG,CAAE,QAAS,GAAM,CACtB,GAAA"}