---
// src/layouts/FrameLP.astro
// (Rendu "dans le body" par DocumentShell)

import HeaderLP from '../components/HeaderLP.astro';
import FooterLP from '../components/FooterLP.astro';
import FloatingBottomCTA from '../components/UI/FloatingBottomCTA.astro';
import PopupForm from '../components/PopupForm.astro';

type PopupCtxNew = {
  serviceKey?: string;
  serviceLabel?: string;
  trackingSource?: string;
  presetSubject?: string | null;
  title?: string | null;        // nouveau nom
  subtitle?: string | null;     // nouveau nom
  creditImpotEnabled?: boolean;

  // ✅ support upload comme SiteFrame
  showFileUpload?: boolean;
  maxFiles?: number;
};

type PopupCtxLegacy = {
  popupTitle?: string | null;   // compat
  popupSubtitle?: string | null;// compat
};

type PopupCtx = PopupCtxNew & PopupCtxLegacy;

const { popupContext } = Astro.props as { popupContext?: PopupCtx };

// Defaults centralisés (identiques à SiteFrame)
const DEFAULTS: Required<Pick<
  PopupCtxNew,
  'serviceKey' | 'serviceLabel' | 'trackingSource' | 'creditImpotEnabled' | 'showFileUpload' | 'maxFiles'
>> & {
  presetSubject: string | null;
  title: string | null;
  subtitle: string | null;
} = {
  serviceKey: 'general',
  serviceLabel: 'Service Klinova',
  trackingSource: 'popup-general',
  presetSubject: null,
  title: 'Devis express Klinova',
  subtitle: 'Réponse sous 24h',
  creditImpotEnabled: false,
  showFileUpload: true, // ✅ défaut global
  maxFiles: 5,          // ✅ défaut global
};

function normalize(ctx?: PopupCtx) {
  const merged = { ...DEFAULTS, ...(ctx || {}) };
  const title = merged.title ?? merged.popupTitle ?? DEFAULTS.title;
  const subtitle = merged.subtitle ?? merged.popupSubtitle ?? DEFAULTS.subtitle;

  return {
    serviceKey: merged.serviceKey,
    serviceLabel: merged.serviceLabel,
    trackingSource: merged.trackingSource,
    presetSubject: merged.presetSubject ?? null,
    title,
    subtitle,
    creditImpotEnabled: !!merged.creditImpotEnabled,
    showFileUpload: merged.showFileUpload,
    maxFiles: merged.maxFiles,
  };
}

const ctx = normalize(popupContext);
---

<!-- Wrapper interne (pas de <body> ici) -->
<div
  id="lp-root"
  data-service-key={ctx.serviceKey}
  data-service-label={ctx.serviceLabel}
  data-tracking-source={ctx.trackingSource}
  data-preset-subject={ctx.presetSubject ?? ''}
  data-popup-title={ctx.title ?? ''}       
  data-popup-subtitle={ctx.subtitle ?? ''}  
  data-credit-impot={ctx.creditImpotEnabled ? '1' : '0'}
>
  <HeaderLP />

  <main class="min-h-[60vh]">
    <slot />
  </main>

  <FooterLP />

  <!-- CTA flottant -->
  <FloatingBottomCTA
    enabled={true}
    showAfter="scroll"
    targetSelector="[data-hide-cta]"
    mobileOnly={true}
  />

  <!-- ✅ PopupForm reçoit bien title/subtitle + upload -->
  <PopupForm context={ctx} />
</div>

<!-- Miroir des data-* sur <body> si des scripts y accèdent -->
<script is:inline>
  (function () {
    try {
      const root = document.getElementById('lp-root');
      if (!root) return;
      const d = root.dataset, b = document.body;
      b.dataset.serviceKey = d.serviceKey || '';
      b.dataset.serviceLabel = d.serviceLabel || '';
      b.dataset.trackingSource = d.trackingSource || '';
      b.dataset.presetSubject = d.presetSubject || '';
      b.dataset.popupTitle = d.popupTitle || '';
      b.dataset.popupSubtitle = d.popupSubtitle || '';
      b.dataset.creditImpot = d.creditImpot || '0';
    } catch {}
  })();
</script>

<!-- Événements analytics + confort -->
<script is:inline>
  window.dataLayer = window.dataLayer || [];

  window.addEventListener('sp:popup_open', (e) => {
    const type = e.detail?.type || 'unknown';
    window.dataLayer.push({ event: 'popup_open', popup_type: type, page_type: 'landing_page' });
    if (typeof window.gtag === 'function') {
      window.gtag('event', 'popup_open', { event_category: 'engagement', event_label: type });
    }
  });

  window.addEventListener('sp:popup_close', () => {
    window.dataLayer.push({ event: 'popup_close', page_type: 'landing_page' });
  });

  // Confort scroll
  if ('scrollRestoration' in window.history) window.history.scrollRestoration = 'manual';
  if (!sessionStorage.getItem('_scroll_reset_done')) {
    window.addEventListener('load', () => {
      window.scrollTo(0, 0);
      sessionStorage.setItem('_scroll_reset_done', '1');
    }, { once: true });
  }
</script>
