---
// src/layouts/LayoutWithCTA.astro
import BaseLayout from './Layout.astro';
import FloatingBottomCTA from '~/components/UI/FloatingBottomCTA.astro';



/** Contexte du popup */
interface PopupCtx {
  serviceKey?: string;
  serviceLabel?: string;
  trackingSource?: string;
  presetSubject?: string | null;
  title?: string | null;
  subtitle?: string | null;
  creditImpotEnabled?: boolean;
}

/** Props du layout */
export interface Props {
  title: string;
  description?: string;
  canonical?: string;

  popupContext?: PopupCtx;
  seo?: { title?: string; description?: string; lang?: string };

  /* Floating CTA */
  stickyEnabled?: boolean;                    // active la barre
  stickyShowAfter?: 'immediate' | 'scroll';   // LP = immediate, vitrine = scroll
  stickyMobileOnly?: boolean;                 // true = mobile-only
  stickyColorMode?: 'instant' | 'progressive';// pour forcer la couleur si besoin

  /* Paramètres comportement (peuvent être surchargés par page) */
  hideSelector?: string;                      // zones qui cachent la barre
  activateSelector?: string;                  // zone qui déclenche le vert
  activateDelayMs?: number;                   // délai avant passage au vert
}

const {
  title,
  description,
  canonical,

  popupContext,
  seo,

  stickyEnabled = true,
  stickyShowAfter = 'scroll',
  stickyMobileOnly = true,
  stickyColorMode,

  hideSelector = '[data-hide-floating-cta]',
  activateSelector = '[data-activate-floating-cta]',
  activateDelayMs = 600,
} = Astro.props as Props;

// Color mode auto si non forcé
const computedColorMode =
  stickyColorMode ?? (stickyShowAfter === 'immediate' ? 'instant' : 'progressive');

const path = Astro.url.pathname;
const isContact = path.includes('contact');

const props = Astro.props;
---

<BaseLayout
 {...props}
>
  <slot />

  {stickyEnabled && !isContact && (
    <FloatingBottomCTA
      enabled
      showAfter={stickyShowAfter}
      colorMode={computedColorMode}
      hideSelector={hideSelector}
      activateSelector={activateSelector}
      activateDelayMs={activateDelayMs}
      mobileOnly={stickyMobileOnly}
    />
  )}
</BaseLayout>
