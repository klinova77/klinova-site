---
/**
 * SeoBase.astro — version Klinova
 * - Centralise les balises SEO, OpenGraph, Twitter & JSON-LD.
 * - Compatible Astro 5 + Tailwind v4.
 * - Pas de dépendance à Stop-Punaises.
 */

import { buildSeo } from '~/lib/seo';

export interface Props {
  /* Inputs automatiques */
  pathname?: string;
  pageType?: string;             // 'home' | 'service' | 'contact' | etc.
  appendBrandToTitle?: boolean;  // défaut: true

  /* Overrides manuels */
  title?: string;
  description?: string;
  canonical?: string;
  noindex?: boolean;
  ogImage?: string;
  ogImageAlt?: string;
  articleType?: 'website' | 'article';
  publishedTime?: string;
  modifiedTime?: string;
  locale?: string;
  jsonLd?: Record<string, any> | Array<Record<string, any>>;
  siteName?: string;
  hrefLangs?: Record<string, string>;
  allowThirdPartyHints?: boolean;
}

const {
  pathname,
  pageType,
  appendBrandToTitle = true,

  title = '',
  description = '',
  canonical = '',
  noindex = false,
  ogImage = '/images/og/og-default.jpg',
  ogImageAlt = 'Klinova – Entreprise de propreté et d’entretien à Paris et en Île-de-France',
  articleType = 'website',
  publishedTime,
  modifiedTime,
  locale = 'fr_FR',
  jsonLd,
  siteName = 'Klinova',
  hrefLangs,
  allowThirdPartyHints = false,
} = Astro.props as Props;

/* Auto-SEO via helper */
const auto = buildSeo({
  pathname: typeof pathname === 'string' ? pathname : (Astro.url?.pathname ?? '/'),
  pageType,
  title,
  description,
  ogImage,
  noindex,
  canonical,
  appendBrandToTitle,
});

/* Valeurs finales */
const finalTitle = auto.title;
const finalDescription = auto.description;
const finalCanonical = auto.canonical;
const finalNoindex = auto.noindex;
const finalOgImage = auto.ogImage;

/* Domaine principal */
const site = Astro.site?.toString().replace(/\/+$/, '') || 'https://klinova.fr';

/* Helper URL absolue */
const toAbs = (url: string) =>
  !url ? '' : url.startsWith('http') ? url : `${site}${url.startsWith('/') ? url : `/${url}`}`;

/* Données finales */
const canonicalAbs = finalCanonical ? toAbs(finalCanonical) : (Astro.url?.toString() || site);
const ogImageAbs = finalOgImage ? toAbs(finalOgImage) : '';
const robots = finalNoindex ? 'noindex, follow' : 'index, follow';
---

<!-- Title & Description -->
<title>{finalTitle}</title>
{finalDescription && <meta name="description" content={finalDescription} />}

<!-- Robots -->
<meta name="robots" content={robots} />
<meta name="googlebot" content={robots} />

<!-- Canonical -->
{canonicalAbs && <link rel="canonical" href={canonicalAbs} />}

<!-- Hreflang -->
{hrefLangs &&
  Object.entries(hrefLangs).map(([lang, url]) => (
    <link rel="alternate" hreflang={lang} href={url.startsWith('http') ? url : toAbs(url)} />
  ))}

<!-- Open Graph -->
<meta property="og:type" content={articleType} />
<meta property="og:site_name" content={siteName} />
<meta property="og:title" content={finalTitle} />
{finalDescription && <meta property="og:description" content={finalDescription} />}
{canonicalAbs && <meta property="og:url" content={canonicalAbs} />}
{locale && <meta property="og:locale" content={locale} />}
{ogImageAbs && (
  <>
    <meta property="og:image" content={ogImageAbs} />
    <meta property="og:image:alt" content={ogImageAlt} />
  </>
)}

<!-- Article (si type article) -->
{articleType === 'article' && (
  <>
    {publishedTime && <meta property="article:published_time" content={publishedTime} />}
    {modifiedTime && <meta property="article:modified_time" content={modifiedTime} />}
    <meta property="article:author" content={siteName} />
    <meta property="article:section" content="Propreté et hygiène professionnelle" />
    <meta property="article:tag" content="nettoyage professionnel" />
    <meta property="article:tag" content="Paris" />
    <meta property="article:tag" content="Île-de-France" />
  </>
)}

<!-- Twitter -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content={finalTitle} />
{finalDescription && <meta name="twitter:description" content={finalDescription} />}
{ogImageAbs && (
  <>
    <meta name="twitter:image" content={ogImageAbs} />
    <meta name="twitter:image:alt" content={ogImageAlt} />
  </>
)}

<!-- JSON-LD : LocalBusiness Klinova -->
{!jsonLd && (
  <script
    type="application/ld+json"
    set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "LocalBusiness",
      "name": siteName,
      "description":
        finalDescription ||
        "Entreprise de propreté et de maintenance à Paris : nettoyage de moquettes, parkings, balcons et désinfection professionnelle.",
      "url": site,
      "logo": `${site}/images/logo-klinova.webp`,
      "image": ogImageAbs || `${site}/images/og/og-default.jpg`,
      "telephone": "+33676738661",
      "address": {
        "@type": "PostalAddress",
        "streetAddress": "6 rue d’Armaillé",
        "addressLocality": "Paris",
        "postalCode": "75017",
        "addressCountry": "FR"
      },
      "areaServed": "Île-de-France",
      "priceRange": "€€",
      "openingHours": "Mo-Su 08:00-20:00"
    })}
  />
)}

{jsonLd && (
  Array.isArray(jsonLd)
    ? jsonLd.map((obj) => (
        <script type="application/ld+json" set:html={JSON.stringify(obj)}></script>
      ))
    : <script type="application/ld+json" set:html={JSON.stringify(jsonLd)}></script>
)}

<!-- Hints tiers optionnels -->
{allowThirdPartyHints && (
  <>
    <link rel="preconnect" href="https://www.google-analytics.com" crossorigin />
    <link rel="preconnect" href="https://www.googletagmanager.com" crossorigin />
    <link rel="dns-prefetch" href="//www.google-analytics.com" />
    <link rel="dns-prefetch" href="//www.googletagmanager.com" />
  </>
)}
