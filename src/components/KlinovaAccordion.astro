---
import { Accordion, AccordionItem } from 'free-astro-components';

interface FAQItem {
  title: string;
  content: string;   // HTML autorisé si html=true
  html?: boolean;
  open?: boolean;    // optionnel: ouvrir par défaut
}

interface Props {
  items: FAQItem[];
  title?: string;
  schema?: boolean;
  id?: string;
  bg?: string;
  singleOpen?: boolean;
  groupName?: string;
  variant?: 'light' | 'shadow' | 'bordered' | 'splitted'; // Ajouter cette ligne
  styleVars?: Partial<Record>;
}

const {
  items = [],
  title = 'Questions fréquentes',
  schema = true,
  id = 'faq-heading',
  bg = '#DFF1E8',
  singleOpen = true,
  groupName,
  variant = 'splitted', // Valeur par défaut
  styleVars = {},
} = Astro.props as Props;

const computedGroup = singleOpen ? (groupName ?? id ?? 'faq') : undefined;

// CSS vars pour la lib (cartes blanches espacées)
const baseStyleVars = {
  '--ac-accordion-background-color': '#C0E2D0',
  '--ac-accordion-border-color': '#C0E2D0',
  '--ac-accordion-border-width': '1px',
  '--ac-accordion-rounded': '1rem',
  '--ac-accordion-spacing': '1rem',
  ...styleVars,
};
const styleAttr = Object.entries(baseStyleVars).map(([k,v]) => `${k}: ${v}`).join('; ');

// JSON-LD
const faqSchema = schema ? {
  '@context': 'https://schema.org',
  '@type': 'FAQPage',
  mainEntity: items.map((i) => ({
    '@type': 'Question',
    name: i.title,
    acceptedAnswer: { '@type': 'Answer', text: i.content },
  })),
} : null;
---

<section class="py-12 md:py-16" style={`background:${bg}`} aria-labelledby={id}>
  <div class="container-responsive">
    <div class="max-w-4xl mx-auto">
      <div class="text-center mb-8 md:mb-12">
        <h2 id={id} class="text-3xl md:text-4xl font-semibold text-[#1E2939]">{title}</h2>
        <p class="mt-3 text-base md:text-lg text-[#475569]">Les réponses aux questions les plus fréquentes.</p>
      </div>

      {/* ⚠️ On laisse la lib gérer le look 'splitted' sans surcouche CSS */}
   <Accordion variant={variant} style={styleAttr}>
        {items.map((it) => (
          <AccordionItem
            title={it.title}
            name={singleOpen ? computedGroup : undefined}  {/* auto-close */}
            open={it.open}
          >
            {it.html
              ? <Fragment set:html={it.content} />
              : <p class="whitespace-pre-line text-[#475569] leading-relaxed">{it.content}</p>}
          </AccordionItem>
        ))}
      </Accordion>
    </div>
  </div>

  {faqSchema && (
    <script type="application/ld+json">{JSON.stringify(faqSchema)}</script>
  )}
</section>
