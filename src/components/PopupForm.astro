---
import { PHONE_E164, PHONE_DISPLAY } from '~/lib/phone';
---

<!-- POPUP OVERLAY -->
<div class="popup-overlay" id="popupOverlay" hidden>
  <div
    class="popup-form"
    id="popupForm"
    role="dialog"
    aria-modal="true"
    aria-labelledby="popupTitleH2"
    tabindex="-1"
  >
    <!-- Header -->
    <div class="popup-header relative overflow-hidden">
      <div class="absolute inset-0 opacity-10 pointer-events-none" aria-hidden="true">
        <svg class="w-full h-full" viewBox="0 0 100 100" preserveAspectRatio="none">
          <defs>
            <pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse">
              <path d="M 10 0 L 0 0 0 10" fill="none" stroke="white" stroke-width="0.5" />
            </pattern>
          </defs>
          <rect width="100" height="100" fill="url(#grid)" />
        </svg>
      </div>

      <div class="relative z-10">
        <div class="header-accent"></div>

        <div id="popupTitle">
          <h2 id="popupTitleH2">Devis express anti-punaises</h2>
          <p>R√©ponse sous 4h ‚Ä¢ Intervention possible aujourd'hui</p>

          <div class="trust-badges">
            <div class="trust-item">
              <div class="trust-icon-wrapper">
                <svg class="trust-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                  <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
              </div>
              <span>Certibiocide &amp; CertiPunaises</span>
            </div>
            <div class="trust-item">
              <div class="trust-icon-wrapper">
                <svg class="trust-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                  <path d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
              </div>
              <span>R√©ponse &lt; 4h ouvr√©es</span>
            </div>
            <div class="trust-item">
              <div class="trust-icon-wrapper">
                <svg class="trust-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                  <path
                    d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"
                  />
                </svg>
              </div>
              <span>Donn√©es prot√©g√©es RGPD</span>
            </div>
          </div>
        </div>
      </div>

      <button class="popup-close" id="closePopup" aria-label="Fermer">
        <span class="close-icon"></span>
      </button>
    </div>

    <!-- Body -->
    <div class="popup-body">
      <!-- Progress -->
      <div class="progress-container">
        <div class="progress-bar" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0">
          <div class="progress-fill" id="progressFill"></div>
        </div>
        <div class="progress-text">
          <span id="progressText">√âtape 1/3</span>
        </div>
      </div>

      <div class="urgence-badge premium" id="urgenceBadge" style="display:none;">
        <div class="badge-pulse"></div>
        <span>Intervention d'urgence - R√©ponse imm√©diate</span>
      </div>

      <div id="formMessage" class="form-message premium" style="display:none;" role="status" aria-live="polite"></div>

      <!-- Form -->
      <form id="contactForm" action="/api/contact" method="POST" novalidate aria-describedby="formMessage">
        <input type="text" name="website" style="display:none;" tabindex="-1" autocomplete="off">
        <input type="hidden" id="popup-service-key" name="service_key">
        <input type="hidden" id="popup-service-label" name="service_label">
        <input type="hidden" id="popup-subject" name="subject">
        <input type="hidden" name="page_path" value={Astro.url.pathname}>

        <!-- Pr√©nom -->
        <div class="form-group premium">
          <div class="floating-label-group">
            <input
              type="text"
              id="popup-prenom"
              name="prenom"
              class="form-input premium"
              placeholder=" "
              required
              autocomplete="given-name"
              enterkeyhint="next"
            >
            <label class="floating-label required" for="popup-prenom">Pr√©nom</label>
            <div class="field-border"></div>
            <div class="validation-icon success">
              <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
                <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
              </svg>
            </div>
            <div class="validation-icon error">
              <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
                <path d="M18 6L6 18M6 6l12 12"/>
              </svg>
            </div>
          </div>
          <div class="form-error premium" id="error-prenom"></div>
        </div>

        <!-- T√©l√©phone -->
        <div class="form-group premium">
          <div class="floating-label-group">
            <input
              type="tel"
              id="popup-telephone"
              name="telephone"
              class="form-input premium"
              placeholder=" "
              autocomplete="tel"
              inputmode="tel"
              required
              enterkeyhint="next"
            >
            <label class="floating-label required" for="popup-telephone">T√©l√©phone</label>
            <div class="field-border"></div>
            <div class="input-hint">Format : 06... ou +33...</div>
            <div class="validation-icon success">
              <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
                <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
              </svg>
            </div>
            <div class="validation-icon error">
              <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
                <path d="M18 6L6 18M6 6l12 12"/>
              </svg>
            </div>
            <input type="hidden" id="popup-telephone-e164" name="telephone_e164">
          </div>
          <div class="form-error premium" id="error-telephone"></div>
        </div>

        <!-- Code postal -->
        <div class="form-group premium">
          <div class="floating-label-group">
            <input
              type="text"
              id="popup-code-postal"
              name="code_postal"
              class="form-input premium"
              placeholder=" "
              inputmode="numeric"
              pattern="[0-9]{5}"
              required
              maxlength="5"
              enterkeyhint="done"
            >
            <label class="floating-label required" for="popup-code-postal">Code postal</label>
            <div class="field-border"></div>
            <div class="input-hint">5 chiffres (ex. 75011). √éle-de-France uniquement.</div>
            <div class="validation-icon success">
              <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
                <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
              </svg>
            </div>
            <div class="validation-icon error">
              <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
                <path d="M18 6L6 18M6 6l12 12"/>
              </svg>
            </div>
          </div>
          <div class="form-error premium" id="error-code-postal"></div>
        </div>

        <!-- Cr√©dit d'imp√¥t (optionnel, cach√© par d√©faut) -->
        <div class="form-group premium" id="credit-impot-question" style="display:none;">
          <label class="switch-label" for="credit-impot-oui">
            Particuliers: souhaitez-vous b√©n√©ficier du cr√©dit d‚Äôimp√¥t et ne payer que 50 % du prix ?
          </label>
          <div class="credit-impot-radios" role="radiogroup" aria-label="Cr√©dit d'imp√¥t">
            <label class="radio-pill" for="credit-impot-oui">
              <input type="radio" id="credit-impot-oui" name="credit_impot" value="oui">
              <span>Oui</span>
            </label>
            <label class="radio-pill" for="credit-impot-non">
              <input type="radio" id="credit-impot-non" name="credit_impot" value="non" checked>
              <span>Non</span>
            </label>
          </div>
        </div>

        <!-- üì∑ PHOTOS (Cloudinary unsigned) -->
 <!-- üì∑ PHOTOS (Cloudinary unsigned) -->
<div class="form-group premium">
  <label class="switch-label" for="popup-photos">Photos (optionnel)</label>

  <!-- üëá Bloc drop modernis√© -->
  <div class="popup-photos-drop border-2 border-dashed" id="popup-photos-drop"
       data-cloud="ton_cloud_name"
       data-preset="ton_unsigned_preset"
       data-max="5"
       data-max-mb="10">

    <!-- input file cach√© -->
    <input type="file" id="popup-photos" name="__photos_local"
           accept="image/*" multiple class="hidden" />

    <!-- label cliquable -->
    <label for="popup-photos" class="popup-photos-label">
      <svg class="popup-photos-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
              d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14
                 m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"/>
      </svg>
      <div>
        <div class="photos-title">Cliquez pour ajouter des photos</div>
        <div class="photos-help">Max 5 photos ‚Ä¢ 10 MB / photo ‚Ä¢ JPG/PNG/WEBP</div>
      </div>
    </label>
  </div>

  <!-- ‚úÖ √âl√©ments d‚Äô√©tat et preview -->
  <div id="popup-photos-status" class="popup-photos-status">Aucune photo</div>
<ul id="popup-photos-list" class="popup-photos-list hidden" aria-live="polite"></ul>

  <div id="popup-photos-hidden" class="hidden"></div>
</div>


        <!-- RGPD -->
        <div class="checkbox-group premium">
          <div class="checkbox-wrapper">
            <input type="checkbox" id="popup-rgpd" name="rgpd" class="checkbox-input" required>
            <label for="popup-rgpd" class="checkbox-label">
              <div class="checkbox-box">
                <svg class="checkbox-check" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                  <path d="M9 12l2 2 4-4"/>
                </svg>
              </div>
              <span class="checkbox-text">
                J'accepte que mes donn√©es soient utilis√©es pour me recontacter dans le cadre de ma demande.
                <a href="/politique-de-confidentialite" target="_blank" rel="noopener" class="link-primary">En savoir plus</a>
              </span>
            </label>
          </div>
          <div class="form-error premium" id="error-rgpd"></div>
        </div>

        <!-- Actions -->
        <div class="form-actions premium">
          <button type="submit" class="btn-primary premium" id="submitBtn">
            <span class="btn-content">
              <span class="loading-spinner"></span>
              <span id="submitText">Envoyer ma demande</span>
            </span>
            <div class="btn-ripple"></div>
          </button>

          <a href={`tel:${PHONE_E164}`} class="btn-call premium" id="callBtn">
            <div class="call-content">
              <div class="call-icon-wrapper">
                <svg class="call-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                  <path d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"/>
                </svg>
              </div>
              <div class="call-text">
                <span class="call-label">Ou appelez maintenant</span>
                <span class="call-number">{PHONE_DISPLAY}</span>
              </div>
            </div>
          </a>
        </div>

        <!-- Footer reassurance -->
        <div class="footer-reassurance premium">
          <div class="reassurance-items">
            <div class="reassurance-item">
              <svg class="reassurance-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
              </svg>
              <span>Sans engagement</span>
            </div>
            <div class="reassurance-item">
              <svg class="reassurance-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
              </svg>
              <span>Prix transparents</span>
            </div>
            <div class="reassurance-item">
              <svg class="reassurance-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                <path d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"/>
              </svg>
              <span>Intervention discr√®te</span>
            </div>
          </div>
        </div>
      </form>
    </div>
  </div>
</div>

<style>
  /* Variables Premium */
.popup-form {
  /* ‚úÖ variables locales, syntaxe correcte */
  --premium-border-radius: 16px;
  --premium-shadow: 0 20px 60px rgba(26, 62, 114, 0.15);
  --premium-gradient: linear-gradient(
    135deg,
    var(--color-action-500, #0ea5e9) 0%,
    var(--color-action-600, #0284c7) 100%
  );
  --premium-transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  --glass-bg: rgba(255, 255, 255, 0.95);
  --glass-backdrop: blur(20px);

  /* (facultatif) alias locaux -> charte globale */
  --sp-primary-600: var(--color-primary-600);
  --sp-neutral-600: var(--color-neutral-600);
  --sp-line:        var(--color-sp-line);
  --sp-pill:        var(--color-sp-pill);
  --sp-light:       var(--color-sp-light);
  --sp-muted:       var(--sp-muted);
}

  html.no-scroll, body.no-scroll { overflow: hidden; }

.popup-overlay[hidden] { display: none !important; }

.popup-overlay {
  position: fixed;
  inset: 0;
  background: rgba(26, 62, 114, 0.4);
  backdrop-filter: var(--glass-backdrop);
  -webkit-backdrop-filter: var(--glass-backdrop);
  z-index: 9998; /* overlay au-dessus du site */
  opacity: 0;
  visibility: hidden;
   transform: scale(0.96) translateY(20px);
  transition: opacity 0.35s ease, transform 0.35s ease, visibility 0s linear 0.35s;
  display: flex;              /* on garde la mise en page */
  align-items: center;
  justify-content: center;
  padding: 20px;
}

.popup-overlay.active {
  opacity: 1;
  visibility: visible;
  transform: scale(1) translateY(0);
  transition: opacity 0.4s ease, transform 0.4s ease;
}
  .popup-form {
    background: var(--glass-bg);
    backdrop-filter: var(--glass-backdrop);
    -webkit-backdrop-filter: var(--glass-backdrop);
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 24px;
    box-shadow: var(--premium-shadow);
    width: 100%;
    max-width: 600px;
    max-height: 90vh;
    overflow-y: auto;
     transition: transform 0.4s ease, opacity 0.4s ease;
  transform: scale(0.95);
    opacity: 0;
  }
  .popup-overlay.active .popup-form { transform: scale(1); opacity: 1; }

.popup-header {
  background: linear-gradient(135deg, #1a3e72 0%, #243b53 100%);
  color: white;
  padding: 32px 40px 28px;
  border-radius: 24px 24px 0 0;
  position: relative;
  overflow: hidden;
}

/* motif blanc semi-transparent comme le hero */
.popup-header svg path {
  stroke: rgba(255, 255, 255, 0.7);
}

/* halo doux */
.popup-header::before {
  content: '';
  position: absolute;
  inset: 0;
  background: radial-gradient(circle at top left, rgba(255, 255, 255, 0.12), transparent 70%);
  z-index: 0;
}

/* contenu au-dessus du motif */
.popup-header .header-accent,
.popup-header .relative {
  position: relative;
  z-index: 2;
}


  .header-accent {
     position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 3px;
  background: linear-gradient(90deg, #fff 0%, rgba(255,255,255,0.8) 50%, #fff 100%);
  animation: shimmer 2s ease-in-out infinite;
  z-index: 1; /* üîΩ passe en dessous */
  }

  @keyframes shimmer { 0%, 100% { opacity: 0.6; } 50% { opacity: 1; } }

  .popup-header h2 {
    font-size: 28px;
    font-weight: 700;
    margin-bottom: 8px;
    letter-spacing: -0.02em;
  }
  .popup-header p {
    color: rgba(255,255,255,0.95);
    font-size: 16px;
    margin-bottom: 20px;
    font-weight: 500;
  }

  .trust-badges {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
    gap: 16px;
    font-size: 13px;
  }
  .trust-item {
    display: flex;
    align-items: center;
    gap: 10px;
    color: rgba(255,255,255,0.95);
    font-weight: 500;
  }
  .trust-icon-wrapper {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 24px;
    height: 24px;
    background: rgba(255,255,255,0.2);
    border-radius: 50%;
    backdrop-filter: blur(10px);
  }
  .trust-icon { width: 14px; height: 14px; stroke-width: 2.5; }

  .popup-close {
    position: absolute;
    top: 24px;
    right: 24px;
    width: 40px;
    height: 40px;
    background: rgba(255,255,255,0.15);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255,255,255,0.3);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: var(--premium-transition);
    color: white;
    z-index: 10;
  }
  .popup-close:hover {
    background: rgba(255,255,255,0.25);
    transform: rotate(90deg) scale(1.1);
  }

  .close-icon {
    width: 16px;
    height: 16px;
    position: relative;
  }
  .close-icon::before,
  .close-icon::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 16px;
    height: 2px;
    background: currentColor;
    border-radius: 1px;
  }
  .close-icon::before { transform: translate(-50%, -50%) rotate(45deg); }
  .close-icon::after { transform: translate(-50%, -50%) rotate(-45deg); }

  .popup-body {
    padding: 40px;
    padding-bottom: 120px;
  }
  @media (max-width: 640px) {
    .popup-body { padding: 24px; padding-bottom: 140px; }
    .popup-header { padding: 24px 24px 20px; }
    .trust-badges { grid-template-columns: 1fr; gap: 12px; }
  }

  .progress-container { margin-bottom: 32px; }
  .progress-bar {
    height: 6px;
    background: rgba(14, 165, 233, 0.1);
    border-radius: 3px;
    overflow: hidden;
    margin-bottom: 8px;
  }
  .progress-fill {
    height: 100%;
    background: var(--premium-gradient);
    width: 0%;
    transition: width 0.6s cubic-bezier(0.4, 0, 0.2, 1);
    border-radius: 3px;
  }
  .progress-text {
    text-align: center;
    font-size: 12px;
    color: var(--sp-muted);
    font-weight: 500;
  }

  .urgence-badge.premium {
    background: linear-gradient(135deg, #f59e0b, #d97706);
    color: white;
    padding: 12px 20px;
    border-radius: 50px;
    font-size: 14px;
    font-weight: 600;
    display: inline-flex;
    align-items: center;
    gap: 10px;
    margin-bottom: 24px;
    box-shadow: 0 8px 25px rgba(245, 158, 11, 0.3);
    position: relative;
    overflow: hidden;
  }
  .badge-pulse {
    position: absolute;
    left: 12px;
    width: 8px;
    height: 8px;
    background: white;
    border-radius: 50%;
    animation: pulse 2s ease-in-out infinite;
  }
  @keyframes pulse { 0%, 100% { opacity: 1; transform: scale(1); } 50% { opacity: 0.7; transform: scale(1.2); } }

  .urgence-switch.premium {
    margin-bottom: 32px;
    padding: 20px;
    background: var(--sp-light);
    border: 1px solid var(--sp-line);
    border-radius: var(--premium-border-radius);
    backdrop-filter: blur(10px);
  }
  .switch-label {
    display: block;
    font-weight: 600;
    color: var(--sp-primary-600);
    margin-bottom: 16px;
    font-size: 16px;
  }
  .toggle-switch { display: flex; align-items: center; gap: 16px; }
  .toggle-input { display: none; }
  .toggle-label {
    position: relative;
    width: 60px;
    height: 32px;
    background: #e2e8f0;
    border-radius: 16px;
    cursor: pointer;
    transition: var(--premium-transition);
  }
  .toggle-slider {
    position: absolute;
    top: 2px;
    left: 2px;
    width: 28px;
    height: 28px;
    background: white;
    border-radius: 50%;
    transition: var(--premium-transition);
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }
  .toggle-input:checked + .toggle-label { background: var(--color-action-500); }
  .toggle-input:checked + .toggle-label .toggle-slider { transform: translateX(28px); }
  .toggle-text {
    display: flex;
    gap: 40px;
    font-size: 14px;
    font-weight: 500;
    color: var(--sp-neutral-600);
  }

  .form-group.premium { margin-bottom: 32px; position: relative; }
  .floating-label-group { position: relative; }

  .form-input.premium {
    width: 100%;
    padding: 20px 16px 8px;
    border: 2px solid var(--sp-line);
    border-radius: var(--premium-border-radius);
    font-size: 16px;
    background: white;
    transition: var(--premium-transition);
    font-family: var(--font-sans, ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto, Arial, sans-serif);
    color: var(--sp-neutral-600);
    min-height: 56px;
    box-shadow: 0 2px 8px rgba(26, 62, 114, 0.06);
  }
  .form-input.premium:focus {
    outline: none;
    background: white;
    border-color: var(--color-action-500);
    box-shadow: 0 0 0 4px rgba(14, 165, 233, 0.15), 0 2px 8px rgba(26, 62, 114, 0.08);
    transform: translateY(-1px);
  }
  .form-input.premium.success { 
    background: white;
    border-color: #10b981;
  }
  .form-input.premium.error { 
    background: white;
    border-color: #ef4444;
    animation: shake 0.5s ease-in-out;
  }
  @keyframes shake { 0%, 100% { transform: translateX(0); } 25% { transform: translateX(-4px); } 75% { transform: translateX(4px); } }

  .floating-label {
    position: absolute;
    left: 16px;
    top: 20px;
    font-size: 16px;
    color: var(--sp-muted);
    transition: var(--premium-transition);
    pointer-events: none;
    background: transparent;
    padding: 0 4px;
    font-weight: 500;
  }
  .floating-label.required::after { content: ' *'; color: #ef4444; }
  .form-input.premium:focus + .floating-label,
  .form-input.premium:not(:placeholder-shown) + .floating-label {
    transform: translateY(-24px) scale(0.85);
    color: var(--color-action-500);
    font-weight: 600;
  }
  .form-input.premium.success + .floating-label { color: #10b981; }
  .form-input.premium.error + .floating-label { color: #ef4444; }

  .field-border {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: var(--premium-gradient);
    transform: scaleX(0);
    transition: var(--premium-transition);
  }
  .form-input.premium:focus ~ .field-border { transform: scaleX(1); }

  .validation-icon {
    position: absolute;
    right: 16px;
    top: 50%;
    transform: translateY(-50%);
    width: 24px;
    height: 24px;
    opacity: 0;
    transition: var(--premium-transition);
  }
  .validation-icon svg { width: 100%; height: 100%; stroke-width: 2.5; }
  .form-input.premium.success ~ .validation-icon.success { opacity: 1; color: #10b981; }
  .form-input.premium.error ~ .validation-icon.error { opacity: 1; color: #ef4444; }

  .input-hint {
    position: absolute;
    right: 16px;
    bottom: 8px;
    font-size: 11px;
    color: var(--sp-muted);
    opacity: 0;
    transition: var(--premium-transition);
    pointer-events: none;
  }
  .form-input.premium:focus ~ .input-hint { opacity: 1; }

  .form-error.premium {
    font-size: 13px;
    color: #ef4444;
    margin-top: 8px;
    min-height: 20px;
    display: flex;
    align-items: center;
    gap: 6px;
    opacity: 0;
    transform: translateY(-4px);
    transition: var(--premium-transition);
  }
  .form-error.premium:not(:empty) { opacity: 1; transform: translateY(0); }
  .form-error.premium::before { content: '‚ö†'; font-size: 14px; }

  .checkbox-group.premium { margin: 32px 0; }
  .checkbox-wrapper { display: flex; align-items: flex-start; gap: 16px; }
  .checkbox-input { display: none; }
  .checkbox-label {
    display: flex;
    align-items: flex-start;
    gap: 12px;
    cursor: pointer;
    font-size: 14px;
    line-height: 1.5;
    color: var(--sp-neutral-600);
  }
  .checkbox-box {
    width: 20px;
    height: 20px;
    border: 2px solid var(--sp-line);
    border-radius: 6px;
    background: white;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: var(--premium-transition);
    flex-shrink: 0;
    margin-top: 2px;
  }
  .checkbox-check {
    width: 12px;
    height: 12px;
    stroke-width: 3;
    color: white;
    opacity: 0;
    transform: scale(0);
    transition: var(--premium-transition);
  }
  .checkbox-input:checked + .checkbox-label .checkbox-box {
    background: var(--color-action-500);
    border-color: var(--color-action-500);
  }
  .checkbox-input:checked + .checkbox-label .checkbox-check { opacity: 1; transform: scale(1); }
  .link-primary { color: var(--color-action-500); text-decoration: none; font-weight: 500; }
  .link-primary:hover { text-decoration: underline; }

  .form-actions.premium { display: flex; flex-direction: column; gap: 16px; margin-bottom: 24px; }

  .btn-primary.premium {
    width: 100%;
    background: var(--premium-gradient);
    color: white;
    border: none;
    padding: 18px 32px;
    border-radius: var(--premium-border-radius);
    font-weight: 600;
    font-size: 16px;
    cursor: pointer;
    transition: var(--premium-transition);
    position: relative;
    overflow: hidden;
    min-height: 56px;
    display: flex;
    align-items: center;
    justify-content: center;
      z-index: 1;
  white-space: nowrap;
  }
  .btn-primary.premium:hover {
    transform: translateY(-3px);
    box-shadow: 0 30px 80px rgba(26, 62, 114, 0.25);
  }
  .btn-content { display: flex; align-items: center; gap: 8px; }
  .loading-spinner {
    width: 20px;
    height: 20px;
    border: 2px solid rgba(255, 255, 255, 0.3);
    border-top: 2px solid white;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    display: none;
  }
  .btn-primary.premium.loading .loading-spinner { display: block; }
  .btn-primary.premium.loading #submitText { opacity: 0.7; }
  @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }

  .btn-ripple {
    position: absolute;
  pointer-events: none;
  border-radius: 50%;
  background: rgba(255,255,255,0.45);
  transform: translate(-50%, -50%) scale(0);
  animation: ripple-soft 420ms ease-out;
  will-change: transform, opacity;
  z-index: 0;
}

@keyframes ripple-soft {
  to { transform: translate(-50%, -50%) scale(1.4); opacity: 0; }
}

  .btn-call.premium {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 16px 24px;
    background: white;
    border: 2px solid var(--sp-primary-600);
    border-radius: var(--premium-border-radius);
    text-decoration: none;
    transition: var(--premium-transition);
    min-height: 56px;
  }
  .btn-call.premium:hover {
    background: var(--sp-pill);
    border-color: var(--color-action-500);
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(26, 62, 114, 0.15);
  }

  .call-content { display: flex; align-items: center; gap: 12px; }
  .call-icon-wrapper {
    width: 32px;
    height: 32px;
    background: rgba(14, 165, 233, 0.1);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .call-icon { width: 18px; height: 18px; color: var(--color-action-500); stroke-width: 2.5; }
  .call-text { display: flex; flex-direction: column; text-align: left; }
  .call-label { font-size: 13px; color: var(--sp-muted); font-weight: 500; }
  .call-number { font-size: 16px; color: var(--sp-primary-600); font-weight: 600; }

  .footer-reassurance.premium { margin-top: 32px; }
  .reassurance-items {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 24px;
    flex-wrap: wrap;
  }
  .reassurance-item {
    display: flex;
    align-items: center;
    gap: 6px;
    font-size: 12px;
    color: var(--sp-muted);
    font-weight: 500;
  }
  .reassurance-icon { width: 14px; height: 14px; stroke-width: 2.5; color: var(--color-action-500); }

  .form-message.premium {
    padding: 20px 24px;
    border-radius: var(--premium-border-radius);
    margin-bottom: 24px;
    font-weight: 500;
    text-align: center;
    backdrop-filter: blur(10px);
    font-size: 15px;
  }
  .form-message.premium.success {
    background: rgba(236, 253, 245, 0.9);
    color: #047857;
    border: 1px solid rgba(16, 185, 129, 0.3);
    box-shadow: 0 8px 25px rgba(16, 185, 129, 0.1);
  }
  .form-message.premium.error {
    background: rgba(254, 242, 242, 0.9);
    color: #dc2626;
    border: 1px solid rgba(239, 68, 68, 0.3);
    box-shadow: 0 8px 25px rgba(239, 68, 68, 0.1);
  }

  @media (max-width: 640px) {
    .reassurance-items { flex-direction: column; gap: 12px; }
    .form-actions.premium .btn-call.premium .call-content { flex-direction: column; text-align: center; gap: 8px; }
  }


  /* ========== COMPACT GLOBAL (mobile-first) ========== */

/* Header popup plus serr√© */
.popup-header {
  padding: 18px 22px 14px;            /* √©tait ~32/40/28 */
}
.popup-header h2 {
  font-size: 22px;                    /* √©tait 28px */
  margin-bottom: 4px;
  line-height: 1.2;
}
.popup-header p {
  font-size: 14px;                    /* √©tait 16px */
  margin-bottom: 10px;
}

/* Badges de confiance plus denses */
.trust-badges {
  gap: 8px;                           /* √©tait 16px */
  grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
}
.trust-item { gap: 8px; }
.trust-icon-wrapper { width: 20px; height: 20px; }
.trust-icon { width: 12px; height: 12px; }

/* Trait lumineux ok, mais pas trop intrusif */
.header-accent { height: 2px; }

/* Corps du popup plus compact */
.popup-body {
  padding: 20px 22px 80px;            /* bas gard√© pour les actions */
}

/* Barre de progression plus fine & moins d‚Äôespace autour */
.progress-container { margin-bottom: 16px; }
.progress-bar { height: 4px; }        /* √©tait 6px */
.progress-text { font-size: 12px; }

/* Groupes de champs plus proches */
.form-group.premium { margin-bottom: 0px; } /* √©tait 32px */

/* Champs plus compacts (hauteur & label flottant) */
.form-input.premium {
  min-height: 48px;                   /* √©tait 56px */
  padding: 14px 14px 6px;             /* haut/bas plus serr√© */
  font-size: 15px;
}
.floating-label {
  top: 14px;                          /* √©tait 20px */
  font-size: 14px;
}
.form-input.premium:focus + .floating-label,
.form-input.premium:not(:placeholder-shown) + .floating-label {
  transform: translateY(-20px) scale(0.9); /* ajust√© pour la nouvelle hauteur */
}

/* Switch urgence plus petit */
.urgence-switch.premium { margin-bottom: 20px; padding: 14px; }
.switch-label { margin-bottom: 10px; font-size: 15px; }
.toggle-label { width: 52px; height: 28px; }
.toggle-slider { width: 24px; height: 24px; }

/* Checkboxes & RGPD plus compacts */
.checkbox-group.premium { margin: 20px 0; }
.checkbox-label { gap: 10px; font-size: 13px; }
.checkbox-box { width: 18px; height: 18px; }


.btn-call.premium {
  min-height: 48px;
  padding: 12px 16px;
}

/* Reassurance compacte */
.footer-reassurance.premium { margin-top: 16px; }
.reassurance-items { gap: 12px; }
.reassurance-item { font-size: 11.5px; }
.reassurance-icon { width: 12px; height: 12px; }

/* Ligne de s√©paration plus l√©g√®re si tu en as une */
hr, .border-sp-line { border-color: color-mix(in srgb, var(--sp-line) 70%, transparent); }

/* ========== L√âGER COMPACT DESKTOP (>= 640px) ========== */
@media (min-width: 640px) {
  .popup-header { padding: 22px 28px 16px; }
  .popup-header h2 { font-size: 24px; }
  .popup-header p { font-size: 15px; margin-bottom: 12px; }

  .popup-body { padding: 24px 28px 96px; }
  .form-group.premium { margin-bottom: 18px; }

  .form-input.premium { min-height: 50px; padding: 14px 16px 6px; }
  .floating-label { top: 15px; font-size: 14px; }

  .btn-primary.premium,
  .btn-call.premium { min-height: 50px; }
}


/* === Apparition fluide du contenu du popup === */

/* Formulaire et contenu internes cach√©s avant animation */
.popup-form {
  opacity: 0;
  transform: translateY(20px);
  transition:
    opacity 0.35s ease,
    transform 0.35s ease;
}

/* Quand le popup devient actif */
.popup-overlay.active .popup-form {
  opacity: 1;
  transform: translateY(0);
}

/* Animation subtile du bouton submit */
#popupForm .btn-primary.premium {
  opacity: 0;
  transform: translateY(16px);
  transition:
    opacity 0.35s ease 0.15s,
    transform 0.35s ease 0.15s; /* d√©lai l√©ger pour arriver apr√®s le reste */
}

.popup-overlay.active #popupForm .btn-primary.premium {
  opacity: 1;
  transform: translateY(0);
}





/* === üß© PRESET PREMIUM COMPACT v2 ‚Äì ESPACEMENT PLUS A√âR√â === */

/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ HEADER ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
.popup-header {
  padding: 22px 26px 18px;
}
.popup-header h2 {
  font-size: 22px;
  margin-bottom: 6px;
}
.popup-header p {
  font-size: 15px;
  margin-bottom: 12px;
}
.trust-badges {
  margin-top: 12px;
  gap: 12px;
}
.trust-item span {
  font-size: 13px;
}

/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ BODY FORMULAIRE ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
.popup-body {
  padding: 26px 26px 96px;
  max-height: 85vh;
  overflow-y: auto;
}



/* Groupes de champs */
#popupForm .form-group.premium {
  margin: 0 !important;
}

/* √âtiquettes flottantes ajust√©es */
.floating-label {
  top: 14px;
  font-size: 14px;
}

/* Champs l√©g√®rement ajust√©s */
.form-input.premium {
  min-height: 50px;
  padding: 15px 14px 7px;
}

/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ERREURS & CHECKBOX ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
#popupForm .form-error.premium {
  margin-top: 6px;
  min-height: 0;
}
#popupForm .form-error.premium:empty {
  display: none;
}
#popupForm .checkbox-group.premium {
  margin-top: 12px;
  margin-bottom: 12px;
}

/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ CTA ZONE ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
#popupForm .form-actions.premium {
  margin-top: 26px;
  margin-bottom: 18px;
  gap: 14px;
}

/* Boutons compacts mais lisibles */
.btn-primary.premium,
.btn-call.premium {
  min-height: 52px;
  font-size: 15.5px;
  font-weight: 600;
}

/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ MOBILE FIXES ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
@media (max-width: 640px) {
  .popup-header {
    padding: 20px 22px 14px;
  }
  .popup-header h2 {
    font-size: 20px;
  }
  .popup-header p {
    font-size: 14px;
    margin-bottom: 8px;
  }

  .popup-body {
    padding: 22px 22px 100px;
  }

  #popupForm {
    row-gap: 18px; /* l√©g√®rement plus espac√©s */
  }

  #popupForm .btn-primary.premium {
    font-size: 16px;
    padding: 14px 20px;
  }

  #popupForm {
    padding-bottom: env(safe-area-inset-bottom, 22px);
  }
}

/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ANIMATIONS FLUIDES ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
.popup-overlay {
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
  transition: opacity 0.35s ease, visibility 0s linear 0.35s;
}
.popup-overlay.active {
  opacity: 1;
  visibility: visible;
  pointer-events: auto;
  transition: opacity 0.4s ease;
}
.popup-form {
  opacity: 0;
  transform: scale(0.96) translateY(14px);
  transition: opacity 0.4s ease, transform 0.4s ease;
}
.popup-overlay.active .popup-form {
  opacity: 1;
  transform: scale(1) translateY(0);
}
#popupForm .btn-primary.premium {
  opacity: 0;
  transform: translateY(10px);
  transition: opacity 0.35s ease 0.12s, transform 0.35s ease 0.12s;
}
.popup-overlay.active #popupForm .btn-primary.premium {
  opacity: 1;
  transform: translateY(0);
}
.popup-overlay[hidden] {
  display: none !important;
}



/* un peu de marge basse suppl√©mentaire quand le clavier est ouvert */
.popup-body {
  padding-bottom: calc(120px + var(--kb, 0px));
}

/* ===== ESPACEMENT ENTRE LES CHAMPS DU FORMULAIRE ===== */

/* üîπ Espace entre chaque bloc de champ */
#popupForm .form-group.premium {
  margin-bottom: 12px !important; /* ajuste ici la valeur pour espacer les champs */
}

/* üîπ Supprime la marge sur le dernier champ avant le bloc suivant (checkbox / CTA) */
#popupForm .form-group.premium:last-of-type {
  margin-bottom: 0 !important;
}

/* üîπ Espace avant la case RGPD */
#popupForm .checkbox-group.premium {
  margin-top: 16px !important;
  margin-bottom: 16px !important;
}

/* üîπ Espace avant les boutons CTA */
#popupForm .form-actions.premium {
  margin-top: 22px !important;
  gap: 14px !important;
}

/* üîí Taille verrouill√©e pour les ic√¥nes du header du popup */
.popup-header .trust-badges .trust-item .trust-icon-wrapper{
  inline-size:22px !important;
  block-size:22px !important;
  min-inline-size:22px !important;
  min-block-size:22px !important;
  flex:0 0 22px !important;
  display:inline-flex !important;
  align-items:center !important;
  justify-content:center !important;
  padding:0 !important;
}

.popup-header .trust-badges .trust-item .trust-icon{
  inline-size:14px !important;
  block-size:14px !important;
  flex:0 0 14px !important;
}

/* Si un global fait svg{width:100%} on neutralise localement */
.popup-header .trust-badges .trust-item .trust-icon,
.popup-header .trust-badges .trust-item .trust-icon *{
  max-width:none !important;
  max-height:none !important;
}




/* Radios ‚Äúpill‚Äù pour la question cr√©dit d'imp√¥t */
.credit-impot-radios {
  display: flex;
  gap: 12px;
  flex-wrap: wrap;
}

.radio-pill {
  display: inline-flex;
  align-items: center;
  gap: 8px;
  padding: 10px 14px;
  border: 2px solid var(--sp-line);
  border-radius: 999px;
  cursor: pointer;
  user-select: none;
  background: #fff;
  transition: var(--premium-transition);
}

.radio-pill input[type="radio"] {
  /* radios visibles et coh√©rentes */
  inline-size: 16px;
  block-size: 16px;
  accent-color: var(--color-action-500); /* support√© par les navigateurs modernes */
}

.radio-pill:hover {
  border-color: var(--color-action-500);
  background: var(--sp-pill);
}

.radio-pill input[type="radio"]:checked + span {
  font-weight: 600;
  color: var(--sp-primary-600);
}


/* ‚úÖ Version compacte par d√©faut */
#popupOverlay .popup-photos-drop {
  display: flex;
  align-items: center;
  gap: 10px;
  padding: 10px 12px;
  min-height: 72px;
  max-height: 90px;
  overflow: hidden;
  border-radius: 12px;
}

/* Ic√¥ne + texte */
#popupOverlay .popup-photos-icon {
  width: 24px !important;
  height: 24px !important;
  flex: 0 0 24px;
}

#popupOverlay .photos-title {
  font-size: 14px;
  font-weight: 600;
  color: var(--sp-primary-600);
}

#popupOverlay .photos-help {
  font-size: 11px;
  color: var(--sp-muted);
  line-height: 1.2;
}

/* üì± Ultra-compact sur mobile (‚â§640px) */
@media (max-width: 640px) {
  #popupOverlay .popup-photos-drop {
    padding: 8px 10px;
    min-height: 64px;
    max-height: 80px;
    border-radius: 10px;
  }

  #popupOverlay .popup-photos-icon {
    width: 20px !important;
    height: 20px !important;
    flex: 0 0 20px;
  }

  #popupOverlay .photos-title {
    font-size: 13px;
  }

  #popupOverlay .photos-help {
    font-size: 10.5px;
  }
}


/* libell√© interne compact */
#popupOverlay .popup-photos-label{
  display:flex; align-items:center; gap:12px; width:100%;
}

/* üîí casse les r√®gles globales type svg{width:100%} */
#popupOverlay .popup-photos-label svg{
  width:28px !important;
  height:28px !important;
  flex:0 0 28px;
  max-width:none !important;
  max-height:none !important;
}

/* texte */
#popupOverlay .photos-title{ font-weight:600; color:var(--sp-primary-600); }
#popupOverlay .photos-help{ font-size:12px; color:var(--sp-muted); }

/* grille des vignettes raisonnable + scroll interne si besoin */
#popupOverlay .popup-photos-preview{
  display:grid; grid-template-columns:repeat(3,1fr);
  gap:8px; margin-top:10px;
  max-height:180px; overflow:auto;  /* √©vite de pousser le popup */
}
#popupOverlay .preview-item{ position:relative; border-radius:10px; overflow:hidden;
  box-shadow:0 2px 8px rgba(26,62,114,.08); border:1px solid var(--sp-line); background:#fff;
}
#popupOverlay .preview-item img{ width:100%; height:84px; object-fit:cover; display:block; }
#popupOverlay .preview-remove{
  position:absolute; top:6px; right:6px; width:22px; height:22px; border-radius:50%;
  background:#ef4444; color:#fff; border:0; font-weight:700; line-height:1; cursor:pointer; opacity:.9;
}
#popupOverlay .preview-remove:hover{ opacity:1; }



/* 1) Masquer compl√®tement la progression (barre + texte) */
#popupOverlay .progress-container{ display:none !important; }

/* 2) Remonter le formulaire (moins d‚Äôair entre header et champs) */
#popupOverlay .popup-header{ padding-bottom: 10px !important; }   /* √©tait 14‚Äì28px */
#popupOverlay .popup-body{ padding-top: 12px !important; }        /* √©tait ~20‚Äì26px */

/* (optionnel) encore plus compact en mobile */
@media (max-width: 640px){
  #popupOverlay .popup-header{ padding-bottom: 8px !important; }
  #popupOverlay .popup-body{ padding-top: 10px !important; }
}



/* --- Photos UI compactes --- */
#popupOverlay .popup-photos-drop{display:flex;align-items:center;gap:10px;padding:10px 12px;min-height:64px;max-height:80px;border-radius:12px;cursor:pointer}
#popupOverlay .popup-photos-preview{display:grid;grid-template-columns:repeat(3,1fr);gap:8px;margin-top:10px}
#popupOverlay .preview-item{position:relative;border:1px solid var(--sp-line);border-radius:10px;overflow:hidden;background:#fff;box-shadow:0 2px 8px rgba(26,62,114,.08)}
#popupOverlay .preview-img{width:100%;height:76px;object-fit:cover;display:block}
#popupOverlay .preview-remove{position:absolute;top:6px;right:6px;width:22px;height:22px;border-radius:50%;background:#ef4444;color:#fff;border:0;font-weight:700;line-height:1;cursor:pointer;opacity:.95}
#popupOverlay .preview-bar{position:absolute;left:0;right:0;bottom:0;height:4px;background:#e5e7eb}
#popupOverlay .preview-bar>span{display:block;height:100%;width:0;background:var(--color-action-500)}
#popupOverlay .preview-badge{position:absolute;left:6px;top:6px;background:#111827cc;color:#fff;border-radius:999px;padding:2px 6px;font-size:11px}
#popupOverlay .popup-photos-status{margin-top:6px;font-size:12px;color:var(--sp-muted)}
#popupOverlay .hidden{display:none!important}


/* Liste compacte des fichiers */
#popupOverlay .popup-photos-list {
  margin-top: 8px;
  padding: 0;
  list-style: none;
  display: grid;
  gap: 6px;
  max-height: 180px;         /* ne pas pousser le popup */
  overflow: auto;
}
#popupOverlay .photo-row {
  display: grid;
  grid-template-columns: 1fr auto auto auto;
  gap: 10px;
  align-items: center;
  padding: 10px 12px;
  border: 1px solid var(--sp-line);
  border-radius: 10px;
  background: #fff;
  box-shadow: 0 2px 8px rgba(26,62,114,.06);
  font-size: 13px;
  color: var(--sp-neutral-600);
}
#popupOverlay .photo-name { font-weight: 600; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; }
#popupOverlay .photo-size { color: var(--sp-muted); }
#popupOverlay .photo-state { font-weight: 600; }
#popupOverlay .photo-remove {
  border: 0; background: #ef4444; color: #fff;
  width: 24px; height: 24px; border-radius: 50%;
  line-height: 1; font-weight: 700; cursor: pointer;
}
#popupOverlay .photo-progress {
  grid-column: 1 / -1;
  height: 4px; background: #e5e7eb; border-radius: 999px; overflow: hidden; margin-top: 6px;
}
#popupOverlay .photo-progress > span { display:block; height:100%; width:0; background: var(--color-action-500); }
#popupOverlay .popup-photos-status { margin-top:6px; font-size:12px; color: var(--sp-muted); }
#popupOverlay .hidden { display: none !important; }

</style>

<!-- IMPORTANT: on passe la conf Cloudinary en data-attributes, pas d'interpolation dans le JS -->

<script is:inline>
(() => {
  const overlay = document.getElementById('popupOverlay');
  const form    = document.getElementById('popupForm');
  const closeBtn= document.getElementById('closePopup');
  const contactForm = document.getElementById('contactForm');
  const msg = document.getElementById('formMessage');
  const submitBtn = document.getElementById('submitBtn');
  const submitText = document.getElementById('submitText');

  if (!overlay || !form) return;

  // --- Scroll lock safe
  let prevOverflow = '', prevPaddingRight = '', locked = false;
  function lockScroll() {
    if (locked) return; locked = true;
    const sbw = window.innerWidth - document.documentElement.clientWidth;
    prevOverflow = document.body.style.overflow;
    prevPaddingRight = document.body.style.paddingRight;
    document.body.style.overflow = 'hidden';
    if (sbw > 0) document.body.style.paddingRight = (parseFloat(getComputedStyle(document.body).paddingRight)||0 + sbw) + 'px';
  }
  function unlockScroll() {
    if (!locked) return; locked = false;
    document.body.style.overflow = prevOverflow || '';
    document.body.style.paddingRight = prevPaddingRight || '';
  }

  // --- API popup
  window.openPopupForm = function () {
    if (overlay.parentNode !== document.body) document.body.appendChild(overlay);
    overlay.removeAttribute('hidden');
    overlay.classList.add('active');
    lockScroll();
    setTimeout(() => form.querySelector('input,button,select,textarea,a')?.focus?.({ preventScroll:true }), 30);
    return true;
  };
  window.closePopupForm = function () {
    overlay.classList.remove('active');
    const onEnd = (e) => {
      if (e.target !== overlay) return;
      overlay.removeEventListener('transitionend', onEnd);
      overlay.setAttribute('hidden', '');
      unlockScroll();
      try { contactForm?.reset(); } catch {}
      if (msg) { msg.className = 'form-message premium'; msg.style.display = 'none'; msg.textContent = ''; }
    };
    overlay.addEventListener('transitionend', onEnd, { once:true });
    requestAnimationFrame(() => {
      if (!getComputedStyle(overlay).transitionDuration || getComputedStyle(overlay).transitionDuration === '0s') {
        overlay.setAttribute('hidden', ''); unlockScroll();
        try { contactForm?.reset(); } catch {}
        if (msg) { msg.className = 'form-message premium'; msg.style.display = 'none'; msg.textContent = ''; }
      }
    });
  };

  // D√©clencheur
  const TRG='[data-open-popup],[data-openpopup],[data-popup-open]';
  document.addEventListener('click', (e) => {
    const t = e.target.matches(TRG) ? e.target : e.target.closest(TRG);
    if (!t) return;
    e.preventDefault(); e.stopPropagation();
    window.openPopupForm();
  }, { capture:true });

  overlay.addEventListener('click', (e) => { if (e.target === overlay) window.closePopupForm(); });
  closeBtn?.addEventListener('click', (e) => { e.preventDefault(); window.closePopupForm(); });
  document.addEventListener('keydown', (e) => { if (e.key === 'Escape' && overlay.classList.contains('active')) window.closePopupForm(); });

  // --- Soumission AJAX (emp√™che la redirection /api/contact)
  if (contactForm) {
    contactForm.addEventListener('submit', async (e) => {
      e.preventDefault();

      // bloquer si upload en cours (variable pos√©e par le script "photos" ci-dessous)
      if (window.__photosUploadingCount && window.__photosUploadingCount > 0) {
        showMessage('Veuillez attendre la fin de l‚Äôenvoi des photos‚Ä¶', 'error');
        return;
      }

      setLoading(true);
      showMessage('', 'clear');
      try {
        const fd = new FormData(contactForm);
        const res = await fetch(contactForm.action || '/api/contact', {
          method: 'POST',
          body: fd,
          headers: { 'Accept': 'application/json' }
        });

        // on essaie de lire le JSON proprement
        let data = null;
        try { data = await res.json(); } catch {}

        if (res.ok) {
          showMessage(data?.message || 'Merci, votre demande a bien √©t√© envoy√©e.', 'success');
          // reset visuel l√©ger
          contactForm.reset();
          // on peut fermer apr√®s 1.5s si tu veux:
          // setTimeout(() => window.closePopupForm(), 1500);
        } else {
          const err = data?.error || data?.message || 'Une erreur est survenue. Merci de r√©essayer.';
          showMessage(err, 'error');
        }
      } catch (err) {
        showMessage('Impossible de contacter le serveur. Merci de r√©essayer dans un instant.', 'error');
      } finally {
        setLoading(false);
      }
    });
  }

  function setLoading(state) {
    if (!submitBtn) return;
    submitBtn.classList.toggle('loading', !!state);
    submitBtn.disabled = !!state;
  }
  function showMessage(text, type) {
    if (!msg) return;
    if (type === 'clear') {
      msg.textContent = ''; msg.style.display = 'none';
      msg.className = 'form-message premium';
      return;
    }
    msg.textContent = text || '';
    msg.style.display = text ? '' : 'none';
    msg.className = `form-message premium ${type === 'success' ? 'success' : 'error'}`;
  }
})();
</script>


<script is:inline>
(() => {
  const drop     = document.getElementById('popup-photos-drop');
  const input    = document.getElementById('popup-photos');
  const list     = document.getElementById('popup-photos-list');
  const hidden   = document.getElementById('popup-photos-hidden');
  const statusEl = document.getElementById('popup-photos-status');
  const submitBtn= document.getElementById('submitBtn');
  if (!drop || !input || !list || !hidden) return;

  const CLOUD  = drop.dataset.cloud || '';
  const PRESET = drop.dataset.preset || '';
  const MAX    = parseInt(drop.dataset.max || '5', 10);
  const MAX_MB = parseInt(drop.dataset.maxMb || '10', 10);

  // compteur global -> utilis√© par le script du formulaire
  window.__photosUploadingCount = 0;

  let files = []; // [{id, file, url, state, progress, secure_url}]

  function setStatus() {
    if (!files.length) { statusEl.textContent = 'Aucune photo'; list.classList.add('hidden'); return; }
    const ok = files.filter(f => f.state === 'done').length;
    const up = window.__photosUploadingCount || 0;
    statusEl.textContent = `${files.length}/${MAX} fichiers ‚Ä¢ ${ok} import√©${ok>1?'s':''}${up?` ‚Ä¢ ${up} en cours‚Ä¶`:''}`;
    list.classList.remove('hidden');
    submitBtn && (submitBtn.disabled = up > 0); // s√©curit√© UX
  }

  function addHidden(url) {
    const i = document.createElement('input');
    i.type = 'hidden'; i.name = 'photos[]'; i.value = url;
    hidden.appendChild(i);
  }
  function removeHidden(url) {
    hidden.querySelectorAll('input[name="photos[]"]').forEach(i => { if (i.value===url) i.remove(); });
  }

  function bytesToMB(b){ return (b/1024/1024).toFixed(1); }

  function render() {
    list.innerHTML = '';
    files.forEach(f => {
      const li = document.createElement('li'); li.className = 'photo-row';

      const name = document.createElement('div'); name.className = 'photo-name'; name.title = f.file.name; name.textContent = f.file.name;
      const size = document.createElement('div'); size.className = 'photo-size'; size.textContent = `${bytesToMB(f.file.size)} MB`;
      const state = document.createElement('div'); state.className = 'photo-state';
      const rm = document.createElement('button'); rm.type='button'; rm.className='photo-remove'; rm.textContent='√ó';

      if (f.state === 'uploading') state.textContent = `Envoi‚Ä¶ ${f.progress||0}%`;
      else if (f.state === 'done') state.textContent = 'Import√©e ‚úì';
      else if (f.state === 'error') state.textContent = 'Erreur';
      else state.textContent = 'En attente';

      rm.addEventListener('click', () => {
        URL.revokeObjectURL(f.url);
        if (f.secure_url) removeHidden(f.secure_url);
        if (f.state === 'uploading') window.__photosUploadingCount = Math.max(0, window.__photosUploadingCount - 1);
        files = files.filter(x => x.id !== f.id);
        render(); setStatus();
      });

      li.appendChild(name);
      li.appendChild(size);
      li.appendChild(state);
      li.appendChild(rm);

      // barre de progression (ligne suivante)
      const bar = document.createElement('div'); bar.className = 'photo-progress';
      const fill = document.createElement('span'); bar.appendChild(fill);
      if (f.state === 'uploading') fill.style.width = (f.progress||0) + '%';
      if (f.state === 'done') fill.style.width = '100%';
      if (f.state !== 'queued') li.appendChild(bar);

      list.appendChild(li);
    });
  }

  function validate(list) {
    const out = [];
    for (const file of list) {
      if (!/^image\/(jpe?g|png|webp)$/i.test(file.type)) { alert(`Format non support√©: ${file.name}`); continue; }
      if (file.size > MAX_MB*1024*1024) { alert(`"${file.name}" d√©passe ${MAX_MB} MB (${bytesToMB(file.size)} MB)`); continue; }
      out.push(file);
    }
    return out.slice(0, Math.max(0, MAX - files.length));
  }

  function uploadToCloudinary(item) {
    if (!CLOUD || !PRESET) {
      item.state = 'queued'; render(); setStatus();
      return;
    }
    item.state = 'uploading'; item.progress = 0; window.__photosUploadingCount++; render(); setStatus();

    const url = `https://api.cloudinary.com/v1_1/${CLOUD}/upload`;
    const fd  = new FormData();
    fd.append('file', item.file);
    fd.append('upload_preset', PRESET);

    const xhr = new XMLHttpRequest();
    xhr.open('POST', url);
    xhr.upload.onprogress = (e) => {
      if (!e.lengthComputable) return;
      item.progress = Math.round((e.loaded / e.total) * 100);
      render();
    };
    xhr.onload = () => {
      try {
        const res = JSON.parse(xhr.responseText);
        if (xhr.status >= 200 && xhr.status < 300 && res.secure_url) {
          item.state = 'done';
          item.secure_url = res.secure_url;
          addHidden(res.secure_url);
        } else {
          item.state = 'error';
        }
      } catch { item.state = 'error'; }
      window.__photosUploadingCount = Math.max(0, window.__photosUploadingCount - 1);
      render(); setStatus();
    };
    xhr.onerror = () => {
      item.state = 'error';
      window.__photosUploadingCount = Math.max(0, window.__photosUploadingCount - 1);
      render(); setStatus();
    };
    xhr.send(fd);
  }

  function handleFiles(fileList) {
    const accepted = validate(Array.from(fileList));
    accepted.forEach(file => {
      const id = crypto.randomUUID ? crypto.randomUUID() : String(Date.now()+Math.random());
      const url = URL.createObjectURL(file);
      const item = { id, file, url, state: 'queued', progress: 0 };
      files.push(item);
      uploadToCloudinary(item);
    });
    render(); setStatus();
  }

  // Click/Change
  input.addEventListener('change', (e) => handleFiles(e.target.files || []));
  // Drag & drop
  ['dragenter','dragover'].forEach(ev => drop.addEventListener(ev, e => { e.preventDefault(); drop.classList.add('is-over'); }, false));
  ['dragleave','drop'].forEach(ev => drop.addEventListener(ev, e => { e.preventDefault(); drop.classList.remove('is-over'); }, false));
  drop.addEventListener('drop', (e) => handleFiles(e.dataTransfer.files || []));
  // Zone cliquable
  drop.addEventListener('click', () => input.click());

  setStatus();
})();
</script>

