---
// src/components/Header.astro
// On importe NAV_SERVICES si disponible, puis on met un fallback local
import type { NavLink } from '~/lib/nav';
import { NAV_SERVICES as NAV_SERVICES_IN } from '~/lib/nav';

import Button from './UI/Button.astro';

import PopupForm from '/components/PopuForm.astro'

const NAV_SERVICES: NavLink[] = Array.isArray(NAV_SERVICES_IN) && NAV_SERVICES_IN.length
  ? NAV_SERVICES_IN
  : [
      { label: 'Nettoyage de moquettes', href: '/nettoyage-moquettes' },
      { label: 'Nettoyage de parkings', href: '/nettoyage-parkings' },
      { label: 'Balcons & fientes de pigeons', href: '/nettoyage-balcons' },
      { label: 'Nettoyage de terrasses', href: '/nettoyage-terrasses' },
      { label: 'Traitement nuisibles', href: '/traitement-nuisibles' },
    ];
---

<header class="bg-white border-b border-gray-100 sticky top-0 z-50 backdrop-blur-sm bg-white/95">
  <div class="container-responsive">
    <div class="flex items-center justify-between h-16 lg:h-20">
      
      <!-- Navigation gauche -->
      <div class="flex items-center gap-8 lg:gap-12">
        <!-- Logo + Nom -->
        <a href="/" class="flex items-center gap-3 group">
          <!-- Placeholder logo - remplacer par votre vraie image -->
          
          <span class="font-bold text-xl lg:text-2xl text-action-600 group-hover:text-action-700 transition-colors font-caviar">
  Klinova
</span>


        <!-- Navigation desktop -->
        <nav class="hidden md:flex items-center gap-6 lg:gap-8">
          <!-- Services avec dropdown -->
          <div class="relative group">
            <button 
  class="flex items-center gap-1 px-4 py-2 font-caviar font-bold text-[1.25rem] leading-tight text-[#111826] hover:text-[var(--color-action-600)] transition-colors duration-200"
  aria-expanded="false"
  data-dropdown-trigger="services"
>
  Services
  <svg class="w-4 h-4 transition-transform group-hover:rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 9-7 7-7-7"/>
  </svg>
</button>

            
            <!-- Dropdown menu -->
            <div 
              class="absolute top-full left-0 mt-2 w-72 bg-white rounded-xl shadow-lg border border-gray-100 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 transform translate-y-2 group-hover:translate-y-0"
              data-dropdown-menu="services"
            >
              <div class="p-4">
                <div class="space-y-2">
                  {NAV_SERVICES.map((item) => (
                    <a 
                      href={item.href}
                      class="block px-4 py-3 text-sm text-gray-700 hover:text-emerald-600 hover:bg-emerald-50 rounded-lg transition-colors duration-150"
                    >
                      {item.label}
                    </a>
                  ))}
                </div>
                
                <!-- Lien vers page complÃ¨te services -->
                <div class="mt-4 pt-4 border-t border-gray-100">
                  <a 
                    href="/autres-services"
                    class="block px-4 py-2 text-sm text-gray-500 hover:text-emerald-600 rounded-lg transition-colors"
                  >
                    Autres prestations â†’
                  </a>
                </div>
              </div>
            </div>
          </div>

          <!-- Contact -->
          <a 
  href="/contact"
  class="px-4 py-2 font-caviar font-bold text-[1.25rem] leading-tight text-[#111826] hover:text-[var(--color-action-600)] transition-colors duration-200"
>
  Contact
</a>

        </nav>
      </div>

      <!-- CTAs droite -->
      <div class="flex items-center gap-3 lg:gap-4">
        <!-- NumÃ©ro tÃ©lÃ©phone (desktop uniquement) -->
        <a 
          href="tel:+33630221228"
          class="hidden lg:flex items-center gap-2 text-gray-600 hover:text-emerald-600 transition-colors group"
        >
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"/>
          </svg>
          <span class="font-medium text-sm">06 30 22 12 28</span>
        </a>

        <!-- CTA principal -->
        <Button
  href="/contact"
  label="Contactez-nous"
  variant="secondary"
  size="md"
  ariaLabel="Ouvrir le formulaire de devis"
  tracking={{ action: 'header-cta', source: 'header', intent: 'open-popup' }}
  withTrackingParams={false}                 // Ã©vite d'ajouter des UTM sur /contact
  data={{ 'open-popup': 'header' }}          // ðŸ”‘ dÃ©clenche le popup (Ã©coutÃ© par le script)
  class="inline-flex items-center gap-2"
>
  <span class="hidden sm:inline">Contactez-nous</span>
  <span class="sm:hidden">Devis</span>
  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4-4 4M3 12h18"/>
  </svg>
</Button>


        <!-- Menu mobile burger -->
        <button 
          class="md:hidden p-2 text-gray-600 hover:text-emerald-600 transition-colors"
          aria-label="Menu mobile"
          data-mobile-menu-toggle
        >
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
          </svg>
        </button>
      </div>
    </div>

    <!-- Menu mobile -->
    <div 
      class="md:hidden border-t border-gray-100 bg-white hidden"
      data-mobile-menu
    >
      <div class="py-4 space-y-2">
        <!-- Services mobile avec sous-menu -->
        <div>
          <button 
            class="w-full flex items-center justify-between px-4 py-3 text-left text-gray-700 hover:text-emerald-600 font-medium"
            data-mobile-services-toggle
          >
            Services
            <svg class="w-4 h-4 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 9-7 7-7-7"/>
            </svg>
          </button>
          
          <div class="hidden pl-6 space-y-1" data-mobile-services-menu>
            {NAV_SERVICES.map((item) => (
              <a 
                href={item.href}
                class="block px-4 py-2 text-sm text-gray-600 hover:text-emerald-600"
              >
                {item.label}
              </a>
            ))}
            <a 
              href="/autres-services"
              class="block px-4 py-2 text-sm text-gray-500 hover:text-emerald-600"
            >
              Autres prestations
            </a>
          </div>
        </div>

        <!-- Contact mobile -->
        <a 
          href="/contact"
          class="block px-4 py-3 text-gray-700 hover:text-emerald-600 font-medium"
        >
          Contact
        </a>

        <!-- TÃ©lÃ©phone mobile -->
        <a 
          href="tel:+33630221228"
          class="flex items-center gap-2 px-4 py-3 text-emerald-600 font-medium"
        >
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"/>
          </svg>
          06 30 22 12 28
        </a>
      </div>
    </div>
  </div>
</header>

<script>
  // Gestion dropdown desktop
  document.addEventListener('DOMContentLoaded', () => {
    const dropdown = document.querySelector('[data-dropdown-trigger="services"]');
    const menu = document.querySelector('[data-dropdown-menu="services"]');
    
    if (dropdown && menu) {
      let timeout;
      
      dropdown.parentElement.addEventListener('mouseenter', () => {
        clearTimeout(timeout);
        menu.classList.remove('opacity-0', 'invisible', 'translate-y-2');
        menu.classList.add('opacity-100', 'visible', 'translate-y-0');
      });
      
      dropdown.parentElement.addEventListener('mouseleave', () => {
        timeout = setTimeout(() => {
          menu.classList.add('opacity-0', 'invisible', 'translate-y-2');
          menu.classList.remove('opacity-100', 'visible', 'translate-y-0');
        }, 100);
      });
    }

    // Gestion menu mobile
    const mobileToggle = document.querySelector('[data-mobile-menu-toggle]');
    const mobileMenu = document.querySelector('[data-mobile-menu]');
    const servicesToggle = document.querySelector('[data-mobile-services-toggle]');
    const servicesMenu = document.querySelector('[data-mobile-services-menu]');

    if (mobileToggle && mobileMenu) {
      mobileToggle.addEventListener('click', () => {
        mobileMenu.classList.toggle('hidden');
      });
    }

    if (servicesToggle && servicesMenu) {
      servicesToggle.addEventListener('click', () => {
        servicesMenu.classList.toggle('hidden');
        const icon = servicesToggle.querySelector('svg');
        if (icon) icon.classList.toggle('rotate-180');
      });
    }
  });
</script>
