---
/**
 * KlinovaLeadForm ‚Äî formulaire 2 √©tapes r√©utilisable + upload photos (Cloudinary unsigned)
 *
 * Props cl√©s :
 * - title, subtitle, source, parisOnly
 * - cloudName, uploadPreset (Cloudinary)
 *
 * D√©pendances c√¥t√© projet :
 * - /api/contact (ton handler adapt√© Klinova)
 * - ~/lib/phone (PHONE_DISPLAY, PHONE_E164)
 * - ~/lib/links (linkAttrs)
 * - ButtonSubmit (si tu veux garder le composant, sinon remplace par <button type="submit">)
 */

import { PHONE_DISPLAY, PHONE_E164 } from '~/lib/phone';
import { linkAttrs } from '~/lib/links';
import ButtonSubmit from '~/components/UI/ButtonSubmit.astro';

export interface Props {
  id?: string;
  title?: string;
  subtitle?: string;
  source?: string;      // tracking source
  parisOnly?: boolean;  // si true, CP = ^75[0-9]{3}$
  cloudName?: string;   // Cloudinary cloud name
  uploadPreset?: string;// Cloudinary unsigned preset
  class?: string;
}

const {
  id = 'klinovaLeadForm',
  title = 'Un charg√© d‚Äôaffaires vous rappelle sous 4h',
  subtitle = 'Devis gratuit ‚Ä¢ Intervention rapide ‚Ä¢ Sans engagement',
  source = 'form-footer',
  parisOnly = false,
  cloudName = 'dgpeykj44',
  uploadPreset = 'form_upload',
  class: className = '',
} = Astro.props;

const formName = 'Formulaire de contact Klinova';
const formType = 'devis';
const cpPattern = parisOnly ? '^75[0-9]{3}$' : '^[0-9]{5}$';
const cpHelp    = parisOnly ? 'Paris uniquement (75001 √† 75020).' : 'Code postal sur 5 chiffres.';
---

<section id="formulaire" class={`section-padding bg-neutral-50 ${className}`}>
  <div class="container-responsive max-w-5xl">

    <!-- En-t√™te -->
    <div class="text-center mb-8">
      <div class="inline-flex items-center gap-2 bg-success-50 border border-success-200 rounded-full px-4 py-2 mb-4">
        <svg class="w-4 h-4 text-success-600" aria-hidden="true" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
        </svg>
        <span class="text-sm font-medium text-success-700">Techniciens certifi√©s ‚Ä¢ D√©lais courts</span>
      </div>

      <h2 class="text-3xl lg:text-4xl font-bold text-primary-600 mb-3">{title}</h2>
      <p class="text-neutral-600">{subtitle}</p>
    </div>

    <div class="grid lg:grid-cols-3 gap-8 lg:gap-10 items-start">
      <!-- FORM -->
      <div class="lg:col-span-2">
        <div class="bg-white rounded-2xl border border-neutral-200 p-6 lg:p-8 shadow-soft animate-fade-in">

          <p data-form-status aria-live="polite" class="text-sm text-neutral-600 mb-3 hidden"></p>

          <!-- Steps header -->
          <div class="flex items-center justify-between mb-6 pb-4 border-b border-neutral-100">
            <div class="flex items-center gap-3">
              <div class="w-8 h-8 rounded-full bg-primary-600 text-white flex items-center justify-center text-sm font-semibold">1</div>
              <span class="font-medium text-neutral-700">Vos coordonn√©es</span>
            </div>
            <div class="flex items-center gap-3 opacity-50">
              <div class="w-8 h-8 rounded-full border-2 border-neutral-300 text-neutral-400 flex items-center justify-center text-sm">2</div>
              <span class="text-sm text-neutral-500 hidden sm:block">D√©tails (optionnel)</span>
            </div>
          </div>

          <form
            id={id}
            action="/api/contact"
            method="POST"
            class="space-y-6"
            data-source={source}
            data-intent="lead"
            data-form-name={formName}
            data-form-type={formType}
            data-value="290"
            data-cloud-name={cloudName}
            data-upload-preset={uploadPreset}
          >
            <!-- Honeypot -->
            <input type="text" name="website" tabindex="-1" autocomplete="off" class="hidden" aria-hidden="true" />

            <!-- STEP 1 -->
            <div data-step="1" class="space-y-5">
              <div class="grid sm:grid-cols-2 gap-4">
                <!-- PR√âNOM -->
                <div class="relative">
                  <label for={`${id}-prenom`} class="block text-sm font-semibold text-neutral-700 mb-2">
                    Votre pr√©nom <span class="text-neutral-400 font-normal">(facultatif)</span>
                  </label>
                  <div class="relative">
                    <input
                      type="text"
                      id={`${id}-prenom`}
                      name="prenom"
                      autocomplete="given-name"
                      class="w-full pl-12 pr-10 py-4 rounded-xl border border-neutral-300 focus:border-primary-600 focus:ring-2 focus:ring-primary-200 outline-none transition-all text-base"
                      placeholder="Ex. Jean"
                    />
                    <svg class="absolute left-4 top-1/2 -translate-y-1/2 w-5 h-5 text-neutral-400" aria-hidden="true" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
                    </svg>
                    <div class="absolute right-3 top-1/2 -translate-y-1/2 w-5 h-5 hidden" id={`${id}-prenom-check`}>
                      <svg class="w-5 h-5 text-success-600" aria-hidden="true" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                      </svg>
                    </div>
                  </div>
                  <small class="text-xs text-red-600 hidden" data-error-for="prenom"></small>
                </div>

                <!-- T√âL√âPHONE -->
                <div class="relative">
                  <label for={`${id}-telephone`} class="block text-sm font-semibold text-neutral-700 mb-2">
                    Votre num√©ro de t√©l√©phone <span class="text-red-500">*</span>
                  </label>
                  <div class="relative">
                    <input
                      type="tel"
                      id={`${id}-telephone`}
                      name="telephone"
                      required
                      inputmode="tel"
                      autocomplete="tel"
                      class="w-full pl-12 pr-10 py-4 rounded-xl border border-neutral-300 focus:border-primary-600 focus:ring-2 focus:ring-primary-200 outline-none transition-all text-base"
                      placeholder="06 12 34 56 78 ou +33 6 12 34 56 78"
                    />
                    <svg class="absolute left-4 top-1/2 -translate-y-1/2 w-5 h-5 text-neutral-400" aria-hidden="true" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"/>
                    </svg>
                    <div class="absolute right-3 top-1/2 -translate-y-1/2 w-5 h-5 hidden" id={`${id}-telephone-check`}>
                      <svg class="w-5 h-5 text-success-600" aria-hidden="true" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                      </svg>
                    </div>
                  </div>
                  <small class="text-xs text-red-600 hidden" data-error-for="telephone"></small>
                </div>
              </div>

             <button
  type="button"
  id={`${id}-nextStepBtn`}
  class="w-full btn-primary justify-center text-lg py-5"
  data-action="next-step"   
>
  Continuer
</button>

             <p class="text-center">
  <button
    type="button"
    id={`${id}-openStep2Link`}
    class="text-sm text-primary-600 hover:underline mt-2"
    data-open-step2             
  >
    + Ajouter des d√©tails (email, photos, message)
  </button>
</p>

              <div class="flex flex-wrap items-center justify-center gap-4 mt-2 pt-4 border-t border-neutral-100">
                <div class="flex items-center gap-2 text-sm text-success-700">
                  <svg class="w-4 h-4" aria-hidden="true" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/></svg>
                  <span class="font-medium">Devis gratuit</span>
                </div>
                <div class="flex items-center gap-2 text-sm text-success-700">
                  <svg class="w-4 h-4" aria-hidden="true" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/></svg>
                  <span class="font-medium">Intervention rapide</span>
                </div>
                <div class="flex items-center gap-2 text-sm text-success-700">
                  <svg class="w-4 h-4" aria-hidden="true" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/></svg>
                  <span class="font-medium">Sans engagement</span>
                </div>
              </div>

              <p class="text-center text-xs text-neutral-500 mt-2">üîí Informations confidentielles</p>
            </div>

            <!-- STEP 2 -->
            <div data-step="2" class="space-y-5 hidden">
              <div class="flex items-center justify-between mb-2 pb-3 border-b border-neutral-100">
                <div class="flex items-center gap-3 opacity-50">
                  <div class="w-8 h-8 rounded-full bg-success-500 text-white flex items-center justify-center text-sm" aria-hidden="true">
                    <svg class="w-4 h-4" viewBox="0 0 24 24" fill="none" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/></svg>
                  </div>
                  <span class="text-sm text-neutral-500 line-through">Vos coordonn√©es</span>
                </div>
                <div class="flex items-center gap-3">
                  <div class="w-8 h-8 rounded-full bg-primary-600 text-white flex items-center justify-center text-sm font-semibold">2</div>
                  <span class="font-medium text-neutral-700">Votre situation</span>
                </div>
              </div>

              <div class="grid sm:grid-cols-2 gap-4">
                <div class="relative">
                  <label for={`${id}-email`} class="block text-sm font-semibold text-neutral-700 mb-2">
                    Votre email <span class="text-neutral-400 font-normal">(facultatif)</span>
                  </label>
                  <div class="relative">
                    <input
                      type="email" id={`${id}-email`} name="email" autocomplete="email"
                      class="w-full pl-12 pr-10 py-3.5 rounded-xl border border-neutral-300 focus:border-primary-600 focus:ring-2 focus:ring-primary-200 outline-none transition-all"
                      placeholder="jean.dupont@email.fr"
                    />
                    <svg class="absolute left-4 top-1/2 -translate-y-1/2 w-5 h-5 text-neutral-400" aria-hidden="true" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
                    </svg>
                    <div class="absolute right-3 top-1/2 -translate-y-1/2 w-5 h-5 hidden" id={`${id}-email-check`}>
                      <svg class="w-5 h-5 text-success-600" aria-hidden="true" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/></svg>
                    </div>
                  </div>
                  <small class="text-xs text-red-600 hidden" data-error-for="email"></small>
                </div>

                <div class="relative">
                  <label for={`${id}-cp`} class="block text-sm font-semibold text-neutral-700 mb-2">
                    Code postal du lieu √† traiter
                  </label>
                  <div class="relative">
                    <input
                      type="text" id={`${id}-cp`} name="code_postal" inputmode="numeric" pattern={cpPattern}
                      class="w-full pl-12 pr-10 py-3.5 rounded-xl border border-neutral-300 focus:border-primary-600 focus:ring-2 focus:ring-primary-200 outline-none transition-all"
                      placeholder="75011"
                    />
                    <svg class="absolute left-4 top-1/2 -translate-y-1/2 w-5 h-5 text-neutral-400" aria-hidden="true" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/>
                    </svg>
                  </div>
                  <p class="text-xs text-neutral-500 mt-1">{cpHelp}</p>
                  <small class="text-xs text-red-600 hidden" data-error-for="code_postal"></small>
                </div>
              </div>

              <!-- Message -->
              <div>
                <label for={`${id}-message`} class="block text-sm font-semibold text-neutral-700 mb-2">
                  D√©crivez bri√®vement votre besoin <span class="text-neutral-400">(facultatif)</span>
                </label>
                <textarea
                  id={`${id}-message`} name="message" rows="3"
                  class="w-full px-4 py-3 rounded-xl border border-neutral-300 focus:border-primary-600 focus:ring-2 focus:ring-primary-200 outline-none transition-all resize-none"
                  placeholder="Type de surface, fr√©quence, contraintes d‚Äôacc√®s, urgence, etc."
                ></textarea>
              </div>

              <!-- Upload photos -->
              <div>
                <label for={`${id}-photos`} class="block text-sm font-semibold text-neutral-700 mb-2">
                  Joindre des photos <span class="text-neutral-400 font-normal">(facultatif ‚Ä¢ max 5)</span>
                </label>
                <input
                  id={`${id}-photos`} name="__photos_local" type="file"
                  accept="image/*" multiple capture="environment"
                  class="block w-full text-sm file:mr-4 file:py-2.5 file:px-4 file:rounded-lg file:border-0 file:bg-primary-50 file:text-primary-700 hover:file:bg-primary-100"
                />
                <div id={`${id}-photos-preview`} data-photos-preview class="mt-3 grid grid-cols-3 gap-2"></div>
<div id={`${id}-photos-hidden`}  data-photos-hidden ></div>
                <p class="mt-2 text-xs text-neutral-500">Formats : jpg, png, webp, heic ‚Ä¢ 10 Mo max / photo</p>
              </div>

              <!-- RGPD -->
              <label class="flex items-start gap-3 text-xs text-neutral-600 leading-relaxed">
                <input type="checkbox" name="rgpd" class="mt-0.5 w-4 h-4 rounded border-neutral-300 text-primary-600 focus:ring-2 focus:ring-primary-200">
                <span>J‚Äôaccepte d‚Äô√™tre recontact√© par <strong>Klinova</strong>. <a href="/politique-de-confidentialite" class="text-primary-600 hover:underline" target="_blank" rel="noopener">En savoir plus</a></span>
              </label>

              <div class="grid sm:grid-cols-2 gap-3">
               <button
  type="button"
  id={`${id}-prevStepBtn`}
  class="inline-flex items-center justify-center rounded-lg border border-neutral-300 px-4 py-3 hover:bg-neutral-50 transition-all"
  data-prev-step>              
  ‚Üê Retour
</button>

                <ButtonSubmit
                  label="Obtenir mon devis"
                  formId={id}
                  formName={formName}
                  formType={formType}
                  value={290}
                  source={source}
                  class="mt-4"
                />
              </div>

              <p class="text-xs text-neutral-500 text-center">üîí Donn√©es prot√©g√©es ‚Äì confidentiel</p>
            </div>
          </form>

          <!-- SUCC√àS -->
          <div id={`${id}-success`} class="hidden text-center py-8">
            <div class="w-16 h-16 bg-success-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <svg class="w-8 h-8 text-success-600" aria-hidden="true" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
              </svg>
            </div>
            <h3 class="text-xl font-bold text-primary-600 mb-2">Demande envoy√©e avec succ√®s !</h3>
            <p class="text-neutral-600">Un charg√© d‚Äôaffaires vous rappelle sous 4h pour √©tablir votre devis personnalis√©.</p>
          </div>
        </div>
      </div>

      <!-- SIDEBAR -->
      <aside class="space-y-6 lg:sticky lg:top-24">
        <div class="bg-white rounded-2xl border border-neutral-200 p-6 shadow-soft">
          <h3 class="font-bold text-primary-600 mb-4 flex items-center gap-2">
            <svg class="w-5 h-5" aria-hidden="true" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"/></svg>
            Besoin d‚Äôune r√©ponse imm√©diate ?
          </h3>

          <a
            href={`tel:${PHONE_E164}`}
            target={linkAttrs(`tel:${PHONE_E164}`).target}
            rel={linkAttrs(`tel:${PHONE_E164}`).rel}
            class="flex items-center gap-3 p-4 rounded-xl border border-neutral-200 hover:border-primary-400 hover:bg-primary-50 transition-all group"
            data-action="call" data-source="form_sidebar"
            aria-label={`Appeler Klinova au ${PHONE_DISPLAY}`}
          >
            <div class="w-12 h-12 rounded-xl bg-primary-600 flex items-center justify-center group-hover:scale-105 transition-transform shrink-0">
              <svg class="w-6 h-6 text-white" aria-hidden="true" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"/>
              </svg>
            </div>

            <div class="flex-1 min-w-0">
              <div class="font-bold text-neutral-900 text-lg leading-none whitespace-nowrap">{PHONE_DISPLAY}</div>
              <div class="text-sm text-primary-700 font-medium mt-1">üìû Appel gratuit ‚Ä¢ Disponible 7j/7</div>
            </div>

            <div class="bg-success-100 text-success-700 text-xs font-bold px-2 py-1 rounded-full shrink-0">DIRECT</div>
          </a>
        </div>
      </aside>
    </div>

    <div class="text-center mt-8">
      <a href="/politique-de-confidentialite" class="text-xs text-neutral-500 hover:text-primary-600 transition-colors" target="_blank" rel="noopener">
        üîí Donn√©es prot√©g√©es ‚Äì Voir notre politique de confidentialit√©
      </a>
    </div>

  </div>
</section>

<style is:global>
@keyframes fadeIn { from { opacity:0; transform:translateY(20px);} to { opacity:1; transform:translateY(0);} }
.animate-fade-in { animation: fadeIn 0.6s ease-out; }
.loading { pointer-events:none; opacity:.9; }
.valid { border-color:#10b981; background-color:#f0fdf4; }
.invalid { border-color:#ef4444; background-color:#fef2f2; }
</style>

<script
  is:inline
  data-form-id={id}
  data-cloud-name={cloudName}
  data-upload-preset={uploadPreset}
>
(() => {
  // Lance init quand le DOM est pr√™t
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', init);
  } else {
    init();
  }

  function init() {
    // ‚úÖ R√©cup√®re les props via dataset du <script>
    const s = document.currentScript;
    const FORM_ID = s?.getAttribute('data-form-id') || 'klinovaLeadForm';
    const CLOUD_NAME = s?.getAttribute('data-cloud-name') || '';
    const UPLOAD_PRESET = s?.getAttribute('data-upload-preset') || '';

    const form = document.getElementById(FORM_ID);
    if (!form) return;

    const qs = (sel) => form.querySelector(sel);

    const statusEl = form.closest('.bg-white.rounded-2xl')?.querySelector('[data-form-status]') || null;

    const step1 = qs('[data-step="1"]');
    const step2 = qs('[data-step="2"]');

    const telephone = form.querySelector('input[name="telephone"]');
    const email     = form.querySelector('input[name="email"]');
    const cp        = form.querySelector('input[name="code_postal"]');

    const photosInput   = form.querySelector('input[name="__photos_local"]');
    const photosPreview = qs('[data-photos-preview]') || qs(`#${FORM_ID}-photos-preview`);
    const photosHidden  = qs('[data-photos-hidden]')  || qs(`#${FORM_ID}-photos-hidden`);

    // --- helpers UI/validation ---
    const show = (el) => el && el.classList.remove('hidden');
    const hide = (el) => el && el.classList.add('hidden');
    const setStatus = (msg, ok = true) => {
      if (!statusEl) return;
      statusEl.textContent = msg || '';
      statusEl.classList.toggle('hidden', !msg);
      statusEl.classList.toggle('text-success-700', ok);
      statusEl.classList.toggle('text-red-600', !ok);
    };
    const setError = (name, msg) => {
      const el = form.querySelector(`[data-error-for="${name}"]`);
      if (el) { el.textContent = msg || ''; el.classList.toggle('hidden', !msg); }
    };
    const normalizePhone = (s='') => { let v=s.replace(/[^\d+]/g,''); if (v.startsWith('00')) v='+'+v.slice(2); return v; };
    const validPhoneFR   = (s) => { const v=normalizePhone(s); return /^0[1-9]\d{8}$/.test(v) || /^\+33[1-9]\d{8}$/.test(v); };
    const validEmail     = (s) => !s || /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(s);
    const validCPByAttr  = (input) => {
      if (!input) return true;
      const v = (input.value || '').trim();
      if (!v) return true;
      const pat = input.getAttribute('pattern');
      if (!pat) return /^\d{5}$/.test(v);
      try { return new RegExp(pat).test(v); } catch { return /^\d{5}$/.test(v); }
    };

    // --- √©tapes ---
    function gotoStep2(force = false) {
      const val = (telephone?.value || '').trim();
      if (!force && !validPhoneFR(val)) {
        setError('telephone', 'Num√©ro FR invalide.');
        telephone?.focus();
        return;
      }
      hide(step1); show(step2); setStatus('');
      setTimeout(() => email?.focus?.(), 40);
    }
    function backToStep1() {
      hide(step2); show(step1); setStatus('');
      setTimeout(() => telephone?.focus(), 40);
    }

    // ‚úÖ D√©l√©gation des clics (s‚Äôappuie sur les data-attributes)
    form.addEventListener('click', (e) => {
      const next  = e.target.closest?.('[data-action="next-step"]');
      const open2 = e.target.closest?.('[data-open-step2]');
      const prev  = e.target.closest?.('[data-prev-step]');
      if (next)  { e.preventDefault(); gotoStep2(false); }
      if (open2) { e.preventDefault(); gotoStep2(true);  }
      if (prev)  { e.preventDefault(); backToStep1();    }
    });

    // --- masque t√©l√©phone ---
    const telCheck = form.querySelector('[id$="telephone-check"]');
    telephone?.addEventListener('input', (e) => {
      const input = e.target;
      let v = (input.value || '').replace(/[^\d+]/g,'');
      let formatted = '';
      if (v.startsWith('+33')) {
        let rest = v.slice(3).replace(/\D/g, '');
        if (rest.startsWith('0')) rest = rest.slice(1);
        rest = rest.slice(0, 9);
        const chunks = [];
        if (rest.length > 0) chunks.push(rest.slice(0, 1));
        for (let i = 1; i < rest.length; i += 2) chunks.push(rest.slice(i, i + 2));
        formatted = '+33 ' + chunks.join(' ');
      } else {
        let digits = v.replace(/\D/g, '').slice(0, 10);
        const chunks = [];
        if (digits.length >= 2) {
          chunks.push(digits.slice(0, 2));
          for (let i = 2; i < digits.length; i += 2) chunks.push(digits.slice(i, i + 2));
        } else {
          chunks.push(digits);
        }
        formatted = chunks.join(' ');
      }
      input.value = formatted.trim();
      const ok = validPhoneFR(input.value);
      input.classList.toggle('valid', ok);
      input.classList.toggle('invalid', !ok && input.value.length>0);
      if (telCheck) telCheck.classList.toggle('hidden', !ok);
      setError('telephone', ok || !input.value ? '' : 'Num√©ro FR invalide.');
    });

    // --- upload photos (Cloudinary unsigned) ---
    const MAX_FILES = 5, MAX_MB = 10;
    function resetPhotos(){ if (photosHidden) photosHidden.innerHTML=''; if (photosPreview) photosPreview.innerHTML=''; }
    function addHiddenUrl(url){ if (!photosHidden) return; const h=document.createElement('input'); h.type='hidden'; h.name='photos[]'; h.value=url; photosHidden.appendChild(h); }
    function addPreview(url){ if (!photosPreview) return; const img=document.createElement('img'); img.src=url; img.alt='Photo jointe'; img.loading='lazy'; img.className='w-full h-24 object-cover rounded border'; photosPreview.appendChild(img); }
    async function uploadToCloudinary(file){
      if (!CLOUD_NAME || !UPLOAD_PRESET) throw new Error('Cloudinary non configur√©.');
      const fd = new FormData(); fd.append('file', file); fd.append('upload_preset', UPLOAD_PRESET);
      const res = await fetch(`https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`, { method:'POST', body:fd });
      if (!res.ok) throw new Error('√âchec upload Cloudinary');
      return res.json();
    }
    photosInput?.addEventListener('change', async () => {
      const files = Array.from(photosInput.files || []);
      if (!files.length) { resetPhotos(); return; }
      const valid = files.slice(0, MAX_FILES).filter(f => /^image\//.test(f.type) && f.size <= MAX_MB * 1024 * 1024);
      resetPhotos();
      if (!valid.length) return;
      photosInput.disabled = true; setStatus('T√©l√©versement des photos‚Ä¶', true);
      try {
        for (const f of valid) {
          const data = await uploadToCloudinary(f);
          if (data?.secure_url) { addHiddenUrl(data.secure_url); addPreview(data.secure_url); }
        }
        setStatus('Photos ajout√©es ‚úî', true);
      } catch (e) {
        console.error(e); setStatus("Erreur lors de l'envoi des photos. Vous pouvez envoyer sans photos.", false); resetPhotos();
      } finally {
        photosInput.disabled = false; setTimeout(() => setStatus('', true), 2500);
      }
    });

    // --- submit ---
    const submitBtn = form.querySelector('button[type="submit"]');
    form.addEventListener('submit', async (ev) => {
      ev.preventDefault();
      setStatus('', true);
      ['telephone','email','code_postal'].forEach(n => setError(n,''));
      const okPhone = validPhoneFR(telephone?.value || '');
      const okEmail = validEmail((email?.value || '').trim());
      const okCP    = validCPByAttr(cp);
      if (!okPhone) setError('telephone','Num√©ro FR invalide.');
      if (!okEmail) setError('email','Email invalide.');
      if (!okCP)    setError('code_postal','Code postal invalide.');
      if (!(okPhone && okEmail && okCP)) { setStatus('Veuillez corriger les champs indiqu√©s en rouge.', false); return; }
      if (submitBtn){ submitBtn.dataset._oldText = submitBtn.textContent || ''; submitBtn.disabled = true; submitBtn.setAttribute('aria-busy','true'); submitBtn.textContent = 'Envoi‚Ä¶'; }
      try {
        const fd = new FormData(form);
        fd.append('form_context','klinova_reusable');
        const res = await fetch(form.action, { method:'POST', body: fd });
        if (!res.ok){
          const msg = (await res.text().catch(()=>'')) || 'Erreur lors de l‚Äôenvoi. Merci de v√©rifier vos informations.';
          setStatus(msg,false);
          if (submitBtn){ submitBtn.disabled=false; submitBtn.setAttribute('aria-busy','false'); submitBtn.textContent = submitBtn.dataset._oldText || 'Envoyer'; }
          return;
        }
        form.setAttribute('aria-hidden','true'); form.style.pointerEvents='none';
        form.innerHTML = `
          <div class="text-center py-8 animate-fade-in">
            <div class="w-16 h-16 bg-success-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <svg class="w-8 h-8 text-success-600" aria-hidden="true" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
              </svg>
            </div>
            <h3 class="text-xl font-bold text-primary-600 mb-2">Merci !</h3>
            <p class="text-neutral-700 max-w-md mx-auto">
              Nous vous recontactons sous <strong>4&nbsp;h</strong> pour votre devis personnalis√©.
            </p>
            <p class="mt-6 text-sm text-neutral-500">Redirection automatique‚Ä¶</p>
          </div>`;
        try { form.scrollIntoView({ behavior:'smooth', block:'center' }); } catch {}
        setTimeout(() => { window.location.assign('/contact'); }, 3500);
      } catch (e) {
        console.error(e); setStatus('Erreur r√©seau, merci de r√©essayer ou de nous appeler.', false);
        if (submitBtn){ submitBtn.disabled=false; submitBtn.setAttribute('aria-busy','false'); submitBtn.textContent = submitBtn.dataset._oldText || 'Envoyer'; }
      }
    });
  }
})();
</script>



